{"version":3,"file":"component---src-pages-blog-tsx-5c6141782858fd58ab85.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/utils/router.utils.ts","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/post-card.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/blog.tsx"],"sourcesContent":["import { navigate } from 'gatsby';\n\ntype Options = {\n  state?: any;\n};\n\nexport class RouterUtils {\n  static push(url: string, options: Options = {}) {\n    return navigate(url, { ...options });\n  }\n\n  static replace(url: string, options: Options = {}) {\n    return navigate(url, { replace: true, ...options });\n  }\n\n  static back() {\n    return navigate(-1);\n  }\n}\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostCardProps = {\n  post: MarkdownRemark;\n  onHover: (postId: string) => void;\n  onBlur: (postId: string) => void;\n};\n\nexport const PostCard = React.memo(\n  ({ post, onHover, onBlur }: PostCardProps) => {\n    return (\n      <Link\n        to={post.fields.slug || ''}\n        onMouseEnter={() => onHover(post.fields.slug)}\n        onMouseLeave={() => onBlur(post.fields.slug)}\n        data-id={post.fields.slug}\n        state={linkStates.toLower}\n      >\n        <div\n          className={`px-20 py-32 overflow-hidden group rounded-16 bg-bg outline outline-transparent outline-1 desktop:hover:outline-blur desktop:hover:drop-shadow-post tablet:outline-border`}\n        >\n          {post.frontmatter.thumbnail?.publicURL && (\n            <CustomImage\n              src={post.frontmatter.thumbnail?.publicURL}\n              alt={post.frontmatter.title}\n              className=\"border-solid rounded-8 border-1 border-border mb-18\"\n            />\n          )}\n          <h2 className=\"break-all text-32-700 line-clamp-2\">\n            {post.frontmatter.title}\n          </h2>\n          <div className=\"mt-8 text-text-quote\">{`${post.frontmatter.date} Â· ${post.timeToRead} min read`}</div>\n          <div className=\"flex gap-12 mt-12\">\n            {post.frontmatter.tags.map((tag) => (\n              <TagButton key={tag} tag={tag} />\n            ))}\n          </div>\n          <p className=\"w-full mt-16 text-text-footer text-18-300 line-clamp-2\">\n            {post.excerpt}\n          </p>\n        </div>\n      </Link>\n    );\n  }\n);\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  const [hoveredPost, setHoveredPost] = useState<string | null>(null);\n\n  const handleBlurPost = useCallback(() => {\n    setHoveredPost(null);\n  }, []);\n\n  return (\n    <>\n      <style>{`#post-list a>div {opacity: 1; transform: translateY(0px) scale(1); transition: all 0.25s;} @media (min-width:1081px) {#post-list:hover a:not([data-id=\"${hoveredPost}\"])>div {opacity: 0.4; transform: translateY(12px) scale(0.98);}}`}</style>\n      <section\n        id=\"post-list\"\n        className=\"grid grid-cols-3 p-24 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch\"\n      >\n        {posts.map((post) => (\n          <PostCard\n            key={post.fields.slug}\n            post={post}\n            onHover={setHoveredPost}\n            onBlur={handleBlurPost}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Heading } from 'src/components/common/heading';\nimport { PostListSection } from './post-list-section';\n\ntype BlogScreenProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const BlogScreen = ({ posts }: BlogScreenProps) => {\n  return (\n    <>\n      <Heading>{`Blog (${posts.length} posts)`}</Heading>\n      <PostListSection posts={posts} />\n    </>\n  );\n};\n","import { graphql, HeadFC, PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Seo } from '../components/common/seo';\nimport { BlogScreen } from '../components/screen/blog-screen';\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          tags\n          hide\n          thumbnail {\n            publicURL\n          }\n        }\n        timeToRead\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\ntype DataType = {\n  allMarkdownRemark: {\n    nodes: MarkdownRemark[];\n  };\n};\n\nexport const Head: HeadFC = (pageProps) => <Seo {...pageProps} />;\n\nconst BlogPage = ({ data }: PageProps<DataType>) => {\n  return <BlogScreen posts={[]} />;\n};\n\nexport default BlogPage;\n"],"names":["RouterUtils","push","url","options","navigate","replace","back","CustomImage","_ref","className","ratio","src","props","React","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","TagButton","tag","motion","div","whileHover","scale","transition","type","damping","stiffness","onClick","preventDefault","stopPropagation","routes","state","linkStates","toLower","PostCard","_post$frontmatter$thu","_post$frontmatter$thu2","post","onHover","onBlur","Link","to","fields","slug","onMouseEnter","onMouseLeave","frontmatter","thumbnail","publicURL","alt","title","date","timeToRead","tags","map","key","excerpt","PostListSection","posts","hoveredPost","setHoveredPost","useState","handleBlurPost","useCallback","id","BlogScreen","Heading","length","Head","pageProps","Seo","data"],"sourceRoot":""}