{"version":3,"file":"2b04985580a13461285fd42f53a320bee914393c-31d99b404b4136fd673a.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./node_modules/kebab-case/index.js","webpack://hanse-kim.dev/./src/_libs/constants/routes.ts","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/hooks/use-site-metadata.ts","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","const KEBAB_REGEX = /\\p{Lu}/gu;\nconst REVERSE_REGEX = /-\\p{Ll}/gu;\n\n/**\n * Transforms a string into kebab-case.\n *\n * @example\n * kebabCase(\"helloWorld\"); // \"hello-world\"\n * kebabCase(\"HelloWorld\"); // \"-hello-world\"\n * kebabCase(\"HelloWorld\", false); // \"hello-world\"\n *\n * @param {string} str The string to transform\n * @param {boolean} keepLeadingDash Whether to keep the leading dash in case the string starts with an uppercase letter (default: true)\n * @returns The kebab-cased string\n */\nconst kebabCase = (str, keepLeadingDash = true) => {\n\tconst result = str.replace(KEBAB_REGEX, (match) => `-${match.toLowerCase()}`);\n\n\tif (keepLeadingDash) {\n\t\treturn result;\n\t}\n\n\tif (result.startsWith(\"-\")) {\n\t\treturn result.slice(1);\n\t}\n};\n\n/**\n * Transforms a kebab-cased string back to the original string.\n *\n * @example\n * kebabCase.reverse(\"hello-world\"); // \"helloWorld\"\n *\n * @param {string} str\n * @returns The original string, with the kebab-case transformation reversed\n */\nkebabCase.reverse = (str) => str.replace(REVERSE_REGEX, (match) => match.slice(1).toUpperCase());\n\nexport default kebabCase;\n","import kebabCase from 'kebab-case';\n\nexport const routes = {\n  blog: '/blog/',\n  about: '/about/',\n  tags: '/tags/',\n  tag: (tag: string) => `/tags/${kebabCase(tag, false)}/`,\n} as const;\n\nexport type Route = (typeof routes)[keyof typeof routes];\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 my-48 text-36-700\">{children}</h1>;\n};\n","import { graphql, Node, useStaticQuery } from 'gatsby';\n\ntype SiteNode = Node & {\n  siteMetadata: {\n    title: string;\n    description: string;\n    email: string;\n    githubUrl: string;\n    githubName: string;\n    publishYear: string;\n    siteUrl: string;\n  };\n};\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        githubUrl\n        githubName\n        email\n        publishYear\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery<{ site: SiteNode }>(query);\n\n  return site.siteMetadata;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.31\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.31\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.31 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["linkStates","toLower","KEBAB_REGEX","REVERSE_REGEX","kebabCase","str","keepLeadingDash","result","replace","match","toLowerCase","startsWith","slice","reverse","toUpperCase","routes","blog","about","tags","tag","Heading","_ref","children","React","className","Seo","title","location","siteMetadata","useSiteMetadata","site","useStaticQuery","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","_a","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","getVelocity","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","charAt","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","clearTime","time","newTime","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}