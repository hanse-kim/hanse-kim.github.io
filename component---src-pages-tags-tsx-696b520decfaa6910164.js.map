{"version":3,"file":"component---src-pages-tags-tsx-696b520decfaa6910164.js","mappings":"iQAYO,MAAMA,EAAiBC,IAAoC,IAAnC,KAAEC,GAA2BD,EAC1D,MAAM,SAAEE,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,UAAQ,KACrC,IAAIF,EAAWG,OAAOC,iBAClBH,EAAW,EAKf,OAJAF,EAAKM,SAASC,IACZN,EAAWO,KAAKC,IAAIR,EAAUM,EAAIG,YAClCR,EAAWM,KAAKG,IAAIT,EAAUK,EAAIG,WAAW,IAExC,CAAET,WAAUC,WAAU,GAC5B,IAOH,OACEU,EAAAA,cAAA,WACEC,UAAU,0DACVC,MAAO,CAAEC,SAAU,SAElBf,EACEgB,UAAS,CAACC,EAAGC,IAAMA,EAAER,WAAaO,EAAEP,aACpCS,KAAKZ,IACJK,SAAAA,cAACQ,EAAAA,EAAOC,IAAG,CAACC,IAAKf,EAAIgB,MAAOC,WAAY,CAAEC,MAAO,OAC/Cb,EAAAA,cAACc,EAAAA,KAAI,CACHC,GAAIC,EAAAA,EAAOrB,IAAIA,EAAIgB,OACnBV,UAAU,0HACVC,MAAO,CAAEC,UAjBQc,EAiBsBtB,EAAIG,YAhBrCmB,EAAQ5B,IAAaC,EAAWD,GAAY,EACrD,OAgBG6B,MAAOC,EAAAA,EAAWC,SAEjB,GAAGzB,EAAIgB,UAAUhB,EAAIG,gBApBLmB,KAuBtB,IACK,ECtCDI,EAAalC,IAAgC,IAA/B,KAAEC,GAAuBD,EAClD,OACEa,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsB,EAAAA,EAAO,KAAC,QACTtB,EAAAA,cAACd,EAAc,CAACE,KAAMA,IACrB,ECSMmC,EAAQC,GAAqBxB,EAAAA,cAACyB,EAAAA,EAAGC,OAAAC,OAAA,CAACC,MAAM,QAAWJ,IAKhE,MAHiBrC,IAAmC,IAAlC,KAAE0C,GAA2B1C,EAC7C,OAAOa,EAAAA,cAACqB,EAAU,CAACjC,KAAMyC,EAAKC,UAAU1C,MAAQ,C","sources":["webpack://hanse-kim.dev/./src/components/screen/tags-screen/tag-list-section.tsx","webpack://hanse-kim.dev/./src/components/screen/tags-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/tags.tsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport { Link } from 'gatsby';\nimport kebabCase from 'kebab-case';\nimport React, { useMemo } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { Tag } from 'src/_libs/types/tag';\n\ntype TagListSectionProps = {\n  tags: Tag[];\n};\n\nexport const TagListSection = ({ tags }: TagListSectionProps) => {\n  const { minCount, maxCount } = useMemo(() => {\n    let minCount = Number.MAX_SAFE_INTEGER;\n    let maxCount = 0;\n    tags.forEach((tag) => {\n      minCount = Math.min(minCount, tag.totalCount);\n      maxCount = Math.max(maxCount, tag.totalCount);\n    });\n    return { minCount, maxCount };\n  }, []);\n\n  const getRelativeFontSize = (count: number) => {\n    const factor = (count - minCount) / (maxCount - minCount) + 1;\n    return `${factor}em`;\n  };\n\n  return (\n    <section\n      className=\"px-24 flex flex-wrap justify-center items-center gap-18\"\n      style={{ fontSize: '16px' }}\n    >\n      {tags\n        .toSorted((a, b) => b.totalCount - a.totalCount)\n        .map((tag) => (\n          <motion.div key={tag.value} whileHover={{ scale: 1.05 }}>\n            <Link\n              to={routes.tag(tag.value)}\n              className=\"text-18-400 underline underline-offset-[0.2em] drop-shadow-transparent transition-shadow desktop:hover:drop-shadow-text\"\n              style={{ fontSize: getRelativeFontSize(tag.totalCount) }}\n              state={linkStates.toLower}\n            >\n              {`${tag.value} (${tag.totalCount})`}\n            </Link>\n          </motion.div>\n        ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport { Tag } from 'src/_libs/types/tag';\nimport { Heading } from 'src/components/common/heading';\nimport { TagListSection } from './tag-list-section';\n\ntype TagsScreenProps = {\n  tags: Tag[];\n};\n\nexport const TagsScreen = ({ tags }: TagsScreenProps) => {\n  return (\n    <>\n      <Heading>Tags</Heading>\n      <TagListSection tags={tags} />\n    </>\n  );\n};\n","import { graphql, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { Tag } from 'src/_libs/types/tag';\nimport { Seo } from 'src/components/common/seo';\nimport { TagsScreen } from 'src/components/screen/tags-screen';\n\ninterface DataType {\n  tagsGroup: {\n    tags: Tag[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    tagsGroup: allMarkdownRemark(limit: 2000) {\n      tags: group(field: { frontmatter: { tags: SELECT } }) {\n        value: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps) => <Seo title=\"Tags\" {...props} />;\n\nconst TagsPage = ({ data }: PageProps<DataType>) => {\n  return <TagsScreen tags={data.tagsGroup.tags} />;\n};\nexport default TagsPage;\n"],"names":["TagListSection","_ref","tags","minCount","maxCount","useMemo","Number","MAX_SAFE_INTEGER","forEach","tag","Math","min","totalCount","max","React","className","style","fontSize","toSorted","a","b","map","motion","div","key","value","whileHover","scale","Link","to","routes","count","state","linkStates","toLower","TagsScreen","Heading","Head","props","Seo","Object","assign","title","data","tagsGroup"],"sourceRoot":""}