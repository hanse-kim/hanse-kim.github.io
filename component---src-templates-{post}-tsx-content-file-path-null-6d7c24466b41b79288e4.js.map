{"version":3,"file":"component---src-templates-{post}-tsx-content-file-path-null-6d7c24466b41b79288e4.js","mappings":"0KAQO,MAAMA,EAAMC,IAAoC,IAAnC,MAAEC,EAAK,SAAEC,GAAoBF,EAC/C,MAAMG,GAAeC,EAAAA,EAAAA,KAEfC,EAAY,GAAGJ,EAAQ,GAAGA,OAAa,KAAKE,EAAaF,QACzDK,EAAU,GAAGH,EAAaI,UAAUL,EAASM,UAAY,KAE/D,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,QAAMC,KAAK,OACXD,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAME,SAAS,YAAYC,QAAQ,UACnCH,EAAAA,cAAA,QAAME,SAAS,eAAeC,QAAST,EAAaF,QACpDQ,EAAAA,cAAA,QAAME,SAAS,UAAUC,QAAQ,YACjCH,EAAAA,cAAA,QAAME,SAAS,WAAWC,QAASP,IACnCI,EAAAA,cAAA,QAAME,SAAS,iBAAiBC,QAAST,EAAaU,cACtDJ,EAAAA,cAAA,QAAME,SAAS,SAASC,QAASN,IAChC,C,sHCfA,MAAMQ,EAAad,IAA+B,IAA9B,KAAEe,GAAuBf,EAClD,OACES,EAAAA,cAAA,eAWU,ECIDO,EAA0BC,GACrCR,EAAAA,cAACV,EAAAA,EAAGmB,OAAAC,OAAA,CAAClB,MAAOgB,EAAUG,KAAKC,eAAeC,YAAYrB,OAAWgB,IASnE,MANqBjB,IAEoC,IAFnC,KACpBoB,GACkDpB,EAClD,OAAOS,EAAAA,cAACK,EAAU,CAACC,KAAMK,EAAKC,gBAAkB,C","sources":["webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/index.tsx","webpack://hanse-kim.dev/./src/templates/{post}.tsx"],"sourcesContent":["import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { PostHeader } from './post-header';\nimport { Markdown } from './markdown';\n\ntype PostScreenProps = {\n  post: MarkdownRemark;\n};\n\nexport const PostScreen = ({ post }: PostScreenProps) => {\n  return (\n    <article>\n      {/* <PostHeader {...post.frontmatter} timeToRead={post.timeToRead} />\n      {post.frontmatter.thumbnail && (\n        <CustomImage\n          className=\"border border-solid mb-36 - 1 border-border\"\n          src={post.frontmatter.thumbnail?.publicURL}\n          alt={post.frontmatter.title}\n          ratio={9 / 21}\n        />\n      )}\n      <Markdown html={post.html} /> */}\n    </article>\n  );\n};\n","import { graphql, HeadFC, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Seo } from 'src/components/common/seo';\nimport { PostScreen } from 'src/components/screen/post-screen';\n\ninterface DataType {\n  markdownRemark: MarkdownRemark;\n}\n\nexport const pageQuery = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport const Head: HeadFC<DataType> = (pageProps) => (\n  <Seo title={pageProps.data.markdownRemark.frontmatter.title} {...pageProps} />\n);\n\nconst PostTemplate = ({\n  data,\n}: PageProps<DataType, object, { referrer: string }>) => {\n  return <PostScreen post={data.markdownRemark} />;\n};\n\nexport default PostTemplate;\n"],"names":["Seo","_ref","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","React","lang","property","content","description","PostScreen","post","Head","pageProps","Object","assign","data","markdownRemark","frontmatter"],"sourceRoot":""}