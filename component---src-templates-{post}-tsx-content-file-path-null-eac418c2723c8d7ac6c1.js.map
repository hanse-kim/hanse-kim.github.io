{"version":3,"file":"component---src-templates-{post}-tsx-content-file-path-null-eac418c2723c8d7ac6c1.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./node_modules/kebab-case/index.js","webpack://hanse-kim.dev/./src/_libs/constants/routes.ts","webpack://hanse-kim.dev/./src/_libs/utils/router.utils.ts","webpack://hanse-kim.dev/./src/components/layout/header/nav-button.tsx","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/post-header.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/markdown.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/index.tsx","webpack://hanse-kim.dev/./src/templates/{post}.tsx"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","const KEBAB_REGEX = /\\p{Lu}/gu;\nconst REVERSE_REGEX = /-\\p{Ll}/gu;\n\n/**\n * Transforms a string into kebab-case.\n *\n * @example\n * kebabCase(\"helloWorld\"); // \"hello-world\"\n * kebabCase(\"HelloWorld\"); // \"-hello-world\"\n * kebabCase(\"HelloWorld\", false); // \"hello-world\"\n *\n * @param {string} str The string to transform\n * @param {boolean} keepLeadingDash Whether to keep the leading dash in case the string starts with an uppercase letter (default: true)\n * @returns The kebab-cased string\n */\nconst kebabCase = (str, keepLeadingDash = true) => {\n\tconst result = str.replace(KEBAB_REGEX, (match) => `-${match.toLowerCase()}`);\n\n\tif (keepLeadingDash) {\n\t\treturn result;\n\t}\n\n\tif (result.startsWith(\"-\")) {\n\t\treturn result.slice(1);\n\t}\n};\n\n/**\n * Transforms a kebab-cased string back to the original string.\n *\n * @example\n * kebabCase.reverse(\"hello-world\"); // \"helloWorld\"\n *\n * @param {string} str\n * @returns The original string, with the kebab-case transformation reversed\n */\nkebabCase.reverse = (str) => str.replace(REVERSE_REGEX, (match) => match.slice(1).toUpperCase());\n\nexport default kebabCase;\n","import kebabCase from 'kebab-case';\n\nexport const routes = {\n  blog: '/blog/',\n  about: '/about/',\n  tags: '/tags/',\n  tag: (tag: string) => `/tags/${kebabCase(tag, false)}/`,\n} as const;\n\nexport type Route = (typeof routes)[keyof typeof routes];\n","import { navigate } from 'gatsby';\n\ntype Options = {\n  state?: any;\n};\n\nexport class RouterUtils {\n  static push(url: string, options: Options = {}) {\n    return navigate(url, { ...options });\n  }\n\n  static replace(url: string, options: Options = {}) {\n    return navigate(url, { replace: true, ...options });\n  }\n\n  static back() {\n    return navigate(-1);\n  }\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { Route } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\nimport { usePage } from 'src/contexts/page-context';\n\ntype NavButtonProps = {\n  children?: React.ReactNode;\n  isActive?: boolean;\n} & (\n  | {\n      to: Route;\n      toBack?: false;\n    }\n  | { to?: ''; toBack: true }\n);\n\nexport const NavButton = ({\n  children,\n  to,\n  toBack,\n  isActive,\n}: NavButtonProps) => {\n  const { pageProps } = usePage();\n\n  const styles =\n    'cursor-pointer w-fit text-18-300-footer drop-shadow-transparent transition-shadow disabled:cursor-default desktop:hover:drop-shadow-text desktop:hover:text-text data-[active=true]:drop-shadow-text data-[active=true]:text-text after:block after:w-full after:h-[1px] after:bg-text after:scale-x-0 desktop:hover:after:scale-x-100 after:transition-transform after:data-[active=true]:scale-x-100';\n\n  if (toBack) {\n    return (\n      <button className={styles} onClick={RouterUtils.back}>\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <Link className={styles} to={`${to}`} data-active={isActive}>\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< 이전 페이지로'}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 mt-48 mb-24 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostHeaderProps = MarkdownRemark['frontmatter'] & {\n  timeToRead: number;\n};\n\nexport const PostHeader = ({\n  title,\n  date,\n  tags,\n  timeToRead,\n}: PostHeaderProps) => {\n  return (\n    <header>\n      <BackButton />\n      <Heading>{title}</Heading>\n      <div className=\"pl-24 -mt-24 mb-36\">\n        <div className=\"text-18-400 text-text-footer\">{`${date} · ${timeToRead} min read`}</div>\n        <div className=\"flex gap-12 mt-12\">\n          {tags.map((tag) => (\n            <TagButton key={tag} tag={tag} />\n          ))}\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport 'src/styles/markdown-styles.css';\nimport 'src/styles/prism-theme.css';\n\ntype MarkdownProps = {\n  html: string;\n};\n\nexport const Markdown = ({ html }: MarkdownProps) => {\n  return (\n    <div\n      className=\"flex flex-col gap-24 px-24 pb-48 md text-20-400\"\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { PostHeader } from './post-header';\nimport { Markdown } from './markdown';\n\ntype PostScreenProps = {\n  post: MarkdownRemark;\n};\n\nexport const PostScreen = ({ post }: PostScreenProps) => {\n  return (\n    <article>\n      <PostHeader {...post.frontmatter} timeToRead={post.timeToRead} />\n      {post.frontmatter.thumbnail && (\n        <CustomImage\n          className=\"border border-solid mb-36 - 1 border-border\"\n          src={post.frontmatter.thumbnail?.publicURL}\n          alt={post.frontmatter.title}\n          ratio={9 / 21}\n        />\n      )}\n      <Markdown html={post.html} />\n    </article>\n  );\n};\n","import { graphql, HeadFC, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Seo } from 'src/components/common/seo';\nimport { PostScreen } from 'src/components/screen/post-screen';\n\ninterface DataType {\n  markdownRemark: MarkdownRemark;\n}\n\nexport const pageQuery = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport const Head: HeadFC<DataType> = (pageProps) => (\n  <Seo title={pageProps.data.markdownRemark.frontmatter.title} {...pageProps} />\n);\n\nconst PostTemplate = ({\n  data,\n}: PageProps<DataType, object, { referrer: string }>) => {\n  return <PostScreen post={data.markdownRemark} />;\n};\n\nexport default PostTemplate;\n"],"names":["linkStates","toLower","KEBAB_REGEX","REVERSE_REGEX","kebabCase","str","keepLeadingDash","result","replace","match","toLowerCase","startsWith","slice","reverse","toUpperCase","routes","blog","about","tags","tag","RouterUtils","push","url","options","navigate","back","NavButton","_ref","children","to","toBack","isActive","pageProps","usePage","styles","React","className","onClick","Link","BackButton","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","Heading","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","TagButton","motion","div","whileHover","scale","transition","type","damping","stiffness","preventDefault","stopPropagation","state","PostHeader","date","timeToRead","map","key","Markdown","html","dangerouslySetInnerHTML","__html","PostScreen","_post$frontmatter$thu","post","frontmatter","thumbnail","publicURL","alt","Head","data","markdownRemark"],"sourceRoot":""}