{"version":3,"file":"component---src-templates-{tag}-tsx-c647d014665d8b32edec.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screens/blog-screen/sections/post-list-section/post-card.tsx","webpack://hanse-kim.dev/./src/components/screens/blog-screen/sections/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/templates/{tag}.tsx"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< 이전 페이지로'}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-alt animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 mt-48 mb-24 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router-utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostCardProps = {\n  post: MarkdownRemark;\n};\n\nexport const PostCard = React.memo(({ post }: PostCardProps) => {\n  return (\n    <Link\n      to={post.fields.slug || ''}\n      data-id={post.fields.slug}\n      state={linkStates.toLower}\n    >\n      <div\n        className={`px-20 py-32 overflow-hidden group rounded-16 bg-bg outline outline-transparent outline-1 desktop:hover:outline-bg-alt desktop:hover:drop-shadow-post tablet:outline-border hover:!opacity-100 hover:!scale-100 desktop:group-hover/post-list:opacity-40 desktop:group-hover/post-list:scale-95 transition-all duration-[250ms]`}\n      >\n        {post.frontmatter.thumbnail?.publicURL && (\n          <CustomImage\n            src={post.frontmatter.thumbnail?.publicURL}\n            alt={post.frontmatter.title}\n            className=\"border-solid rounded-8 border-1 border-border mb-18\"\n          />\n        )}\n        <h2 className=\"break-all text-28-700 line-clamp-2\">\n          {post.frontmatter.title}\n        </h2>\n        <div className=\"mt-8 text-text-muted\">{`${post.frontmatter.date} · ${post.timeToRead} min read`}</div>\n        <div className=\"flex gap-12 mt-12\">\n          {post.frontmatter.tags.map((tag) => (\n            <TagButton key={tag} tag={tag} />\n          ))}\n        </div>\n        <p className=\"w-full mt-16 text-text-alt text-18-300 line-clamp-2 break-all\">\n          {post.excerpt}\n        </p>\n      </div>\n    </Link>\n  );\n});\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  return (\n    <section className=\"grid grid-cols-3 p-24 desktop:gap-8 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch group/post-list\">\n      {posts.map((post) => (\n        <PostCard key={post.fields.slug} post={post} />\n      ))}\n    </section>\n  );\n};\n","import { graphql, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { Seo } from 'src/components/common/seo';\nimport { PostListSection } from 'src/components/screens/blog-screen/sections/post-list-section';\n\ntype PageContextType = {\n  tag: string;\n};\n\ntype DataType = {\n  allMarkdownRemark: {\n    edges: Array<{ node: MarkdownRemark }>;\n    totalCount: number;\n  };\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            hide\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps<DataType, PageContextType>) => (\n  <Seo title={`태그: ${props.pageContext.tag}`} {...props} />\n);\n\nconst TagPage = ({\n  pageContext,\n  data,\n}: PageProps<DataType, PageContextType, { referrer: string }>) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <BackButton />\n      <Heading>Tag: {tag}</Heading>\n      <PostListSection posts={edges.map(({ node }) => node)} />\n    </>\n  );\n};\n\nexport default TagPage;\n"],"names":["linkStates","toLower","BackButton","_ref","React","className","NavButton","toBack","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","Heading","children","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","property","content","description","TagButton","tag","motion","div","whileHover","scale","transition","type","damping","stiffness","onClick","preventDefault","stopPropagation","RouterUtils","push","routes","state","PostCard","_post$frontmatter$thu","_post$frontmatter$thu2","post","Link","to","fields","slug","frontmatter","thumbnail","publicURL","alt","date","timeToRead","tags","map","key","excerpt","PostListSection","posts","Head","pageContext","data","edges","allMarkdownRemark","_ref2","node"],"sourceRoot":""}