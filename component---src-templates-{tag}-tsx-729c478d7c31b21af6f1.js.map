{"version":3,"file":"component---src-templates-{tag}-tsx-729c478d7c31b21af6f1.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/utils/router.utils.ts","webpack://hanse-kim.dev/./src/contexts/page-context.tsx","webpack://hanse-kim.dev/./src/components/layout/header/nav-button.tsx","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/post-card.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/templates/{tag}.tsx"],"sourcesContent":["import { navigate } from 'gatsby';\n\ntype Options = {\n  state?: any;\n};\n\nexport class RouterUtils {\n  static push(url: string, options: Options = {}) {\n    return navigate(url, { ...options });\n  }\n\n  static replace(url: string, options: Options = {}) {\n    return navigate(url, { replace: true, ...options });\n  }\n\n  static back() {\n    return navigate(-1);\n  }\n}\n","import { PageProps } from 'gatsby';\nimport React, { createContext, useContext, useState } from 'react';\n\ntype PageContextValue = {\n  pageProps: Partial<PageProps> & { path: string };\n  setPageProps: (pageProps: Omit<PageProps, 'children'>) => void;\n};\n\nconst PageContext = createContext<PageContextValue | null>(null);\n\ntype PageProviderProps = { children: React.ReactNode };\n\nexport const PageProvider = ({ children }: PageProviderProps) => {\n  const [pageProps, setPageProps] = useState<\n    Partial<PageProps> & { path: string }\n  >({ path: '' });\n\n  return (\n    <PageContext.Provider value={{ pageProps, setPageProps }}>\n      {children}\n    </PageContext.Provider>\n  );\n};\n\nexport const usePage = () => {\n  const value = useContext(PageContext);\n\n  if (value === null) {\n    return { pageProps: { path: '' }, setPageProps: () => {} };\n  }\n\n  return value;\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { Route } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\nimport { usePage } from 'src/contexts/page-context';\n\ntype NavButtonProps = {\n  children?: React.ReactNode;\n  isActive?: boolean;\n} & (\n  | {\n      to: Route;\n      toBack?: false;\n    }\n  | { to?: ''; toBack: true }\n);\n\nexport const NavButton = ({\n  children,\n  to,\n  toBack,\n  isActive,\n}: NavButtonProps) => {\n  const { pageProps } = usePage();\n\n  const styles =\n    'cursor-pointer w-fit text-18-300-footer drop-shadow-transparent transition-shadow disabled:cursor-default desktop:hover:drop-shadow-text desktop:hover:text-text data-[active=true]:drop-shadow-text data-[active=true]:text-text after:block after:w-full after:h-[1px] after:bg-text after:scale-x-0 desktop:hover:after:scale-x-100 after:transition-transform after:data-[active=true]:scale-x-100';\n\n  if (toBack) {\n    return (\n      <button className={styles} onClick={RouterUtils.back}>\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <Link className={styles} to={`${to}`} data-active={isActive}>\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< 이전 페이지로'}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostCardProps = {\n  post: MarkdownRemark;\n  onHover: (postId: string) => void;\n  onBlur: (postId: string) => void;\n};\n\nexport const PostCard = React.memo(\n  ({ post, onHover, onBlur }: PostCardProps) => {\n    return (\n      <Link\n        to={post.fields.slug || ''}\n        onMouseEnter={() => onHover(post.fields.slug)}\n        onMouseLeave={() => onBlur(post.fields.slug)}\n        data-id={post.fields.slug}\n        state={linkStates.toLower}\n      >\n        <div\n          className={`px-20 py-32 overflow-hidden group rounded-16 bg-bg outline outline-transparent outline-1 desktop:hover:outline-blur desktop:hover:drop-shadow-post tablet:outline-border`}\n        >\n          {post.frontmatter.thumbnail?.publicURL && (\n            <CustomImage\n              src={post.frontmatter.thumbnail?.publicURL}\n              alt={post.frontmatter.title}\n              className=\"border-solid rounded-8 border-1 border-border mb-18\"\n            />\n          )}\n          <h2 className=\"break-all text-32-700 line-clamp-2\">\n            {post.frontmatter.title}\n          </h2>\n          <div className=\"mt-8 text-text-quote\">{`${post.frontmatter.date} · ${post.timeToRead} min read`}</div>\n          <div className=\"flex gap-12 mt-12\">\n            {post.frontmatter.tags.map((tag) => (\n              <TagButton key={tag} tag={tag} />\n            ))}\n          </div>\n          <p className=\"w-full mt-16 text-text-footer text-18-300 line-clamp-2\">\n            {post.excerpt}\n          </p>\n        </div>\n      </Link>\n    );\n  }\n);\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  const [hoveredPost, setHoveredPost] = useState<string | null>(null);\n\n  const handleBlurPost = useCallback(() => {\n    setHoveredPost(null);\n  }, []);\n\n  return (\n    <>\n      <style>{`#post-list a>div {opacity: 1; transform: translateY(0px) scale(1); transition: all 0.25s;} @media (min-width:1081px) {#post-list:hover a:not([data-id=\"${hoveredPost}\"])>div {opacity: 0.4; transform: translateY(12px) scale(0.98);}}`}</style>\n      <section\n        id=\"post-list\"\n        className=\"grid grid-cols-3 p-24 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch\"\n      >\n        {posts.map((post) => (\n          <PostCard\n            key={post.fields.slug}\n            post={post}\n            onHover={setHoveredPost}\n            onBlur={handleBlurPost}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n","import { graphql, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { Seo } from 'src/components/common/seo';\nimport { PostListSection } from 'src/components/screen/blog-screen/post-list-section';\n\ntype PageContextType = {\n  tag: string;\n};\n\ntype DataType = {\n  allMarkdownRemark: {\n    edges: Array<{ node: MarkdownRemark }>;\n    totalCount: number;\n  };\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            hide\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps<DataType, PageContextType>) => (\n  <Seo title={`태그: ${props.pageContext.tag}`} {...props} />\n);\n\nconst TagPage = ({\n  pageContext,\n  data,\n}: PageProps<DataType, PageContextType, { referrer: string }>) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <BackButton />\n      <Heading>Tag: {tag}</Heading>\n      <PostListSection posts={edges.map(({ node }) => node)} />\n    </>\n  );\n};\n\nexport default TagPage;\n"],"names":["RouterUtils","push","url","options","navigate","replace","back","PageContext","createContext","NavButton","_ref","children","to","toBack","isActive","pageProps","usePage","value","useContext","path","setPageProps","styles","React","className","onClick","Link","BackButton","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","TagButton","tag","motion","div","whileHover","scale","transition","type","damping","stiffness","preventDefault","stopPropagation","routes","state","linkStates","toLower","PostCard","_post$frontmatter$thu","_post$frontmatter$thu2","post","onHover","onBlur","fields","slug","onMouseEnter","onMouseLeave","frontmatter","thumbnail","publicURL","alt","title","date","timeToRead","tags","map","key","excerpt","PostListSection","posts","hoveredPost","setHoveredPost","useState","handleBlurPost","useCallback","id","Head","Seo","pageContext","data","edges","allMarkdownRemark","Heading","_ref2","node"],"sourceRoot":""}