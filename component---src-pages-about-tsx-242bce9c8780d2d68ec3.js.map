{"version":3,"file":"component---src-pages-about-tsx-242bce9c8780d2d68ec3.js","mappings":"0KAcA,MCNaA,EAAMC,IAAoC,IAAnC,MAAEC,EAAK,SAAEC,GAAoBF,EAC/C,MAAMG,EDqBuBC,MAC7B,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAjBR,cAmBT,OAAOD,EAAKF,YAAY,ECxBHC,GAEfG,EAAY,GAAGN,EAAQ,GAAGA,OAAa,KAAKE,EAAaF,QACzDO,EAAU,GAAGL,EAAaM,UAAUP,EAASQ,UAAY,KAE/D,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,QAAMC,KAAK,OACXD,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAME,SAAS,YAAYC,QAAQ,UACnCH,EAAAA,cAAA,QAAME,SAAS,eAAeC,QAASX,EAAaF,QACpDU,EAAAA,cAAA,QAAME,SAAS,UAAUC,QAAQ,YACjCH,EAAAA,cAAA,QAAME,SAAS,WAAWC,QAASP,IACnCI,EAAAA,cAAA,QAAME,SAAS,iBAAiBC,QAASX,EAAaY,cACtDJ,EAAAA,cAAA,QAAME,SAAS,SAASC,QAASN,IAChC,C,qHCrBA,MAAMQ,EAAchB,IAA0B,MAALA,EAC9C,OAAOW,EAAAA,cAAAA,EAAAA,SAAA,KAAE,cAAc,ECAZM,EAAQC,GAAqBP,EAAAA,cAACZ,EAAAA,EAAGoB,OAAAC,OAAA,CAACnB,MAAM,QAAWiB,IAMhE,MAJkBlB,IAAmB,MAALA,EAC9B,OAAOW,EAAAA,cAACK,EAAW,KAAG,C","sources":["webpack://hanse-kim.dev/./src/hooks/use-site-metadata.ts","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/screen/about-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/about.tsx"],"sourcesContent":["import { graphql, Node, useStaticQuery } from 'gatsby';\n\ntype SiteNode = Node & {\n  siteMetadata: {\n    title: string;\n    description: string;\n    email: string;\n    githubUrl: string;\n    githubName: string;\n    publishYear: string;\n    siteUrl: string;\n  };\n};\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        githubUrl\n        githubName\n        email\n        publishYear\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery<{ site: SiteNode }>(query);\n\n  return site.siteMetadata;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\n\ntype AboutScreenProps = {};\n\nexport const AboutScreen = ({}: AboutScreenProps) => {\n  return <>hello world</>;\n};\n","import { type PageProps } from 'gatsby';\nimport React from 'react';\nimport { Seo } from 'src/components/common/seo';\nimport { AboutScreen } from 'src/components/screen/about-screen';\n\nexport const Head = (props: PageProps) => <Seo title=\"Tags\" {...props} />;\n\nconst AboutPage = ({}: PageProps) => {\n  return <AboutScreen />;\n};\n\nexport default AboutPage;\n"],"names":["Seo","_ref","title","location","siteMetadata","useSiteMetadata","site","useStaticQuery","pageTitle","pageUrl","siteUrl","pathname","React","lang","property","content","description","AboutScreen","Head","props","Object","assign"],"sourceRoot":""}