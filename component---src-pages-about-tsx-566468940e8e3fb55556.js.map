{"version":3,"file":"component---src-pages-about-tsx-566468940e8e3fb55556.js","mappings":"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","sources":["webpack://hanse-kim.dev/./node_modules/camelcase/index.js","webpack://hanse-kim.dev/../src/image-utils.ts","webpack://hanse-kim.dev/../src/components/hooks.ts","webpack://hanse-kim.dev/../src/components/layout-wrapper.tsx","webpack://hanse-kim.dev/../src/components/picture.tsx","webpack://hanse-kim.dev/../src/components/placeholder.tsx","webpack://hanse-kim.dev/../src/components/main-image.tsx","webpack://hanse-kim.dev/../src/components/gatsby-image.server.tsx","webpack://hanse-kim.dev/../src/components/gatsby-image.browser.tsx","webpack://hanse-kim.dev/../src/components/static-image.server.tsx","webpack://hanse-kim.dev/../src/components/static-image.tsx","webpack://hanse-kim.dev/./src/_libs/utils/router-utils.ts","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/screens/post-screen/content-markdown-section/index.tsx","webpack://hanse-kim.dev/./src/stores/github-profile-store.ts","webpack://hanse-kim.dev/./src/components/screens/about-screen/profile-section/avatar.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/profile-section/introduce/contact-link.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/profile-section/introduce/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/profile-section/index.tsx","webpack://hanse-kim.dev/./src/hooks/use-projects.ts","webpack://hanse-kim.dev/./src/components/screens/about-screen/_common/titled-section.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/project-section/_assets/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/project-section/project-card.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/project-section/project-detail-drawer.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/project-section/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/skills-section/_assets/index.tsx","webpack://hanse-kim.dev/./src/hooks/use-client-size.ts","webpack://hanse-kim.dev/./src/components/common/rich-text.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/skills-section/categorized-skills/skill-badge.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/skills-section/categorized-skills/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/skills-section/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/about.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { navigate } from 'gatsby';\n\ntype Options = {\n  state?: any;\n};\n\nexport class RouterUtils {\n  static push(url: string, options: Options = {}) {\n    return navigate(url, { ...options });\n  }\n\n  static replace(url: string, options: Options = {}) {\n    return navigate(url, { replace: true, ...options });\n  }\n\n  static back() {\n    return navigate(-1);\n  }\n}\n","import React from 'react';\nimport { RouterUtils } from 'src/_libs/utils/router-utils';\nimport { NavButton } from './nav-button';\n\ntype BackButtonProps = {\n  label?: string;\n};\n\nexport const BackButton = ({ label = '이전 페이지로' }: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton onClick={RouterUtils.back}>{`< ${label}`}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity duration-500 data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          data-loaded={false}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-alt animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\nimport 'src/styles/markdown-styles.css';\nimport 'src/styles/prism-theme.css';\n\ntype ContentMarkdownSectionProps = {\n  html: string;\n};\n\nexport const ContentMarkdownSection = ({\n  html,\n}: ContentMarkdownSectionProps) => {\n  return (\n    <div\n      className=\"flex flex-col gap-24 px-24 pb-48 md text-20-400\"\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  );\n};\n","import { QueryStoreValue } from 'src/_libs/types/common';\nimport { create } from 'zustand';\n\ntype StoreValue = QueryStoreValue<GithubProfile>;\n\ntype GithubProfile = {\n  avatar_url: string;\n  name: string;\n  bio: string | null;\n};\n\nconst useGithubProfileStore = create<StoreValue>((set) => {\n  const initialState: StoreValue = {\n    isLoading: true,\n    isError: false,\n    data: undefined,\n  };\n\n  (async () => {\n    try {\n      const profile = await getGithubProfile();\n      set({ ...initialState, isLoading: false, data: profile });\n    } catch (e) {\n      set({ ...initialState, isLoading: false, isError: true });\n    }\n  })();\n\n  return initialState;\n});\n\nexport const useGithubProfile = () => useGithubProfileStore((state) => state);\n\nasync function getGithubProfile() {\n  const url = `https://api.github.com/users/hanse-kim`;\n  const response = await fetch(url);\n  const profile = await response.json();\n\n  return profile as GithubProfile;\n}\n","import React from 'react';\nimport { CustomImage } from 'src/components/common/custom-image';\n\ntype AvatarProps = {\n  avatarUrl?: string;\n  alt?: string;\n};\n\nexport const Avatar = ({ avatarUrl, alt }: AvatarProps) => {\n  return (\n    <div className=\"w-180 h-180 border-solid rounded-full border-4 border-border overflow-hidden\">\n      <CustomImage className=\"object-cover\" src={avatarUrl} alt={alt} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Icon } from 'src/components/common/icon';\nimport { IconName } from 'src/components/common/icon/_assets';\n\ntype ContactLinkProps = {\n  label: string;\n  url: string;\n  iconName: IconName;\n};\n\nexport const ContactLink = ({ label, url, iconName }: ContactLinkProps) => {\n  return (\n    <a className=\"flex items-center gap-4\" href={url} target=\"_blank\">\n      <Icon size={20} iconName={iconName} color={'muted'} />\n      <span className=\"text-text-muted text-16-500\">{label}</span>\n    </a>\n  );\n};\n","import React from 'react';\nimport { ContactLink } from './contact-link';\n\nconst contents = {\n  title: \"Hi, I'm Hanse 🐻\",\n  links: [\n    {\n      url: 'mailto:hansekim.dev@gmail.com',\n      label: 'Email',\n      iconName: 'mail',\n    },\n    {\n      url: 'https://github.com/hanse-kim',\n      label: 'Github',\n      iconName: 'github',\n    },\n  ],\n  descriptions: [\n    '3년차 프론트엔드 개발자 김한슬입니다.',\n    '스타트업에 근무하며 3개의 핵심 프로젝트 런칭에 크게 기여하고, 소통을 통해 팀 생산성을 향상시킨 경험이 있습니다.',\n  ],\n} as const;\n\ntype IntroduceProps = {};\n\nexport const Introduce = ({}: IntroduceProps) => {\n  return (\n    <section className=\"flex flex-col gap-24 tablet:items-center\">\n      <div className=\"flex flex-col items-start gap-8 tablet:items-center\">\n        <h2 className=\"text-28-700\">{contents.title}</h2>\n        <div className=\"flex gap-18\">\n          {contents.links.map((link, index) => (\n            <ContactLink key={index} {...link} />\n          ))}\n        </div>\n      </div>\n      <div className=\"text-18-400 hyphens-auto flex flex-col gap-4\" lang=\"en\">\n        {contents.descriptions.map((description, index) => (\n          <p key={index}>{description}</p>\n        ))}\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useGithubProfile } from 'src/stores/github-profile-store';\nimport { Avatar } from './avatar';\nimport { Introduce } from './introduce';\n\ntype ProfileSectionProps = {};\n\nexport const ProfileSection = ({}: ProfileSectionProps) => {\n  const githubProfile = useGithubProfile();\n\n  return (\n    <div className=\"flex items-center justify-center gap-24 mx-auto tablet:gap-12 tablet:flex-col tablet:items-center\">\n      <Avatar\n        avatarUrl={githubProfile.data?.avatar_url}\n        alt={githubProfile.data?.name}\n      />\n      <Introduce />\n    </div>\n  );\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { ProjectMarkdown } from 'src/_libs/types/project-markdown';\n\ntype QueryData = {\n  allMarkdownRemark: {\n    nodes: ProjectMarkdown[];\n  };\n};\n\nconst query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { sourceInstanceName: { eq: \"projects\" } } }\n      sort: { frontmatter: { ordering: ASC } }\n    ) {\n      nodes {\n        html\n        frontmatter {\n          title\n          subtitle\n          description\n          isReverse\n        }\n        fields {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const useProjects = () => {\n  const { allMarkdownRemark } = useStaticQuery<QueryData>(query);\n  const projects = allMarkdownRemark.nodes;\n\n  return { projects };\n};\n","import React from 'react';\n\ntype TitledSectionProps = {\n  children?: React.ReactNode;\n  title: string;\n  subtitle?: string;\n};\n\nexport const TitledSection = ({\n  children,\n  title,\n  subtitle,\n}: TitledSectionProps) => {\n  return (\n    <section>\n      <h2 className=\"text-32-500 text-center border-solid border-b-1 border-border\">\n        {title}\n      </h2>\n      <p className=\"text-16-500 text-center mt-4\">{subtitle}</p>\n      <div className=\"py-36\">{children}</div>\n    </section>\n  );\n};\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nexport const thumbnails: Record<string, React.ReactElement> = {\n  harmony: (\n    <StaticImage\n      src=\"./harmony.webp\"\n      alt=\"harmony\"\n      layout=\"constrained\"\n      width={640}\n    />\n  ),\n  orderhop: (\n    <StaticImage\n      src=\"./orderhop.webp\"\n      alt=\"orderhop\"\n      layout=\"constrained\"\n      width={640}\n    />\n  ),\n  uzzim: (\n    <StaticImage\n      src=\"./uzzim.webp\"\n      alt=\"uzzim\"\n      layout=\"constrained\"\n      width={640}\n    />\n  ),\n};\n","import React from 'react';\nimport { ProjectFrontmatter } from 'src/_libs/types/project-markdown';\nimport { NavButton } from 'src/components/common/nav-button';\n\nconst popKey = 'pop';\n\ntype ProjectCardProps = ProjectFrontmatter & {\n  id: string;\n  image: React.ReactElement;\n};\n\nexport const ProjectCard = ({\n  id,\n  title,\n  subtitle,\n  description,\n  image,\n  isReverse,\n}: ProjectCardProps) => {\n  return (\n    <div\n      className=\"flex items-center justify-center gap-24 tablet:!flex-col tablet:gap-16 data-[reverse=true]:flex-row-reverse\"\n      data-reverse={isReverse}\n    >\n      <div className=\"shrink-0 max-w-[480px]\">{image}</div>\n      <div>\n        <h3 className=\"text-28-700\">{title}</h3>\n        <p className=\"mt-4 text-18-40\">\"{description}\"</p>\n        <p className=\"mb-12 text-16-400 text-text-muted\">{subtitle}</p>\n        <NavButton to={`?${popKey}=${id}`}>{'View Details ->'}</NavButton>\n      </div>\n    </div>\n  );\n};\n","import { AnimatePresence, motion } from 'framer-motion';\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { BackButton } from 'src/components/common/back-button';\nimport { ContentMarkdownSection } from 'src/components/screens/post-screen/content-markdown-section';\nimport { useIsMounted } from 'src/hooks/use-is-mounted';\n\ntype ProjectDetailDrawerProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  html?: string;\n};\n\nexport const ProjectDetailDrawer = ({\n  isOpen,\n  onClose,\n  html = '',\n}: ProjectDetailDrawerProps) => {\n  const { isMounted } = useIsMounted();\n\n  useEffect(() => {\n    document.documentElement.style.overflow = isOpen ? 'hidden' : 'auto';\n  }, [isOpen]);\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return createPortal(\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          <motion.div\n            onClick={onClose}\n            className=\"bg-[black] bg-opacity-40 fixed inset-0 z-40\"\n            initial={'exit'}\n            animate={'enter'}\n            exit={'exit'}\n            variants={{\n              exit: { opacity: 0 },\n              enter: { opacity: 1 },\n            }}\n          />\n          <motion.section\n            className=\"bg-bg w-full max-w-[640px] py-36 fixed right-0 top-0 bottom-0 z-50 drop-shadow-drawer\"\n            initial={'exit'}\n            animate={'enter'}\n            exit={'exit'}\n            variants={{\n              exit: { opacity: 0, translateX: '100%' },\n              enter: { opacity: 1, translateX: '0' },\n            }}\n            transition={{ ease: 'easeOut', duration: 0.25 }}\n          >\n            <BackButton label=\"돌아가기\" />\n            <ContentMarkdownSection html={html} />\n          </motion.section>\n        </>\n      )}\n    </AnimatePresence>,\n    document.body\n  );\n};\n","import React from 'react';\nimport { RouterUtils } from 'src/_libs/utils/router-utils';\nimport { usePage } from 'src/contexts/page-context';\nimport { useProjects } from 'src/hooks/use-projects';\nimport { TitledSection } from '../_common/titled-section';\nimport { thumbnails } from './_assets';\nimport { ProjectCard } from './project-card';\nimport { ProjectDetailDrawer } from './project-detail-drawer';\n\nexport const projectDetailPopKey = 'pop';\n\ntype ProjectSectionProps = {};\n\nexport const ProjectSection = ({}: ProjectSectionProps) => {\n  const { projects } = useProjects();\n  const { pageProps } = usePage();\n  const searchParams = new URLSearchParams(pageProps.location.search);\n  const pop = searchParams.get(projectDetailPopKey) || '';\n  const poppedProject = projects.find((project) => project.fields.name === pop);\n\n  const isDetailDrawerOpen = !!poppedProject;\n\n  return (\n    <TitledSection title=\"Works\" subtitle=\"on FreeD Soft (2022.07 - Present)\">\n      <div className=\"flex flex-col items-stretch gap-56\">\n        {projects.map((project, index) => (\n          <ProjectCard\n            key={index}\n            {...project.frontmatter}\n            image={thumbnails[project.fields.name]}\n            id={project.fields.name}\n          />\n        ))}\n      </div>\n      <ProjectDetailDrawer\n        isOpen={isDetailDrawerOpen}\n        onClose={RouterUtils.back}\n        html={poppedProject?.html}\n      />\n    </TitledSection>\n  );\n};\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nexport const logos = {\n  aws: (\n    <StaticImage src=\"./aws.svg\" alt=\"aws\" width={28} layout=\"constrained\" />\n  ),\n  azure: (\n    <StaticImage\n      src=\"./azure.svg\"\n      alt=\"azure\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  emotion: (\n    <StaticImage\n      src=\"./emotion.webp\"\n      alt=\"emotion\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  figma: (\n    <StaticImage\n      src=\"./figma.svg\"\n      alt=\"figma\"\n      height={28}\n      layout=\"constrained\"\n    />\n  ),\n  gatsby: (\n    <StaticImage\n      src=\"./gatsby.svg\"\n      alt=\"gatsby\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  github: (\n    <StaticImage\n      src=\"./github.svg\"\n      alt=\"github\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  nextjs: (\n    <StaticImage\n      src=\"./nextjs.svg\"\n      alt=\"nextjs\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  react: (\n    <StaticImage\n      src=\"./react.svg\"\n      alt=\"react\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  svelte: (\n    <StaticImage\n      src=\"./svelte.svg\"\n      alt=\"svelte\"\n      height={28}\n      layout=\"constrained\"\n    />\n  ),\n  tailwindcss: (\n    <StaticImage\n      src=\"./tailwindcss.svg\"\n      alt=\"tailwindcss\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  tanstack: (\n    <StaticImage\n      src=\"./tanstack.webp\"\n      alt=\"tanstack\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  typescript: (\n    <StaticImage\n      src=\"./typescript.svg\"\n      alt=\"typescript\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  javascript: (\n    <StaticImage\n      src=\"./javascript.svg\"\n      alt=\"javascript\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n  vscode: (\n    <StaticImage\n      src=\"./vscode.svg\"\n      alt=\"vscode\"\n      width={28}\n      layout=\"constrained\"\n    />\n  ),\n};\n","import { useRef, useState } from 'react';\n\ntype Size = [width: number, height: number];\n\nconst initialSize: Size = [0, 0];\n\nexport const useClientSize = <T extends HTMLElement>() => {\n  const ref = useRef<T | null>(null);\n  const [size, setSize] = useState<Size>(initialSize);\n\n  const assignRef = (element: T) => {\n    if (!element || !!ref.current) {\n      return;\n    }\n\n    ref.current = element;\n    const rect = element.getBoundingClientRect();\n\n    setSize([rect.width, rect.height]);\n  };\n\n  const isAssigned = size !== initialSize;\n\n  return { assignRef, size, isAssigned } as const;\n};\n","import React from 'react';\n\ntype RichTextProps = {\n  value: string;\n};\n\nexport const RichText = ({ value }: RichTextProps) => {\n  const parts = value.split(/(\\*\\*[^*]+\\*\\*|\\*[^*]+\\*|~~[^~]+~~)/g);\n\n  return (\n    <>\n      {parts.map((part, index) => {\n        if (part.startsWith('**') && part.endsWith('**')) {\n          return (\n            <b key={index} className=\"font-bold text-currentColor\">\n              {part.slice(2, -2)}\n            </b>\n          );\n        }\n\n        if (part.startsWith('*') && part.endsWith('*')) {\n          return (\n            <i key={index} className=\"italic text-currentColor\">\n              {part.slice(1, -1)}\n            </i>\n          );\n        }\n\n        if (part.startsWith('~~') && part.endsWith('~~')) {\n          return (\n            <s key={index} className=\"line-through text-currentColor\">\n              {part.slice(2, -2)}\n            </s>\n          );\n        }\n\n        return part;\n      })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useClientSize } from 'src/hooks/use-client-size';\nimport { SkillInfo } from '..';\nimport { RichText } from 'src/components/common/rich-text';\n\ntype SkillBadgeProps = SkillInfo & {};\n\nexport const SkillBadge = ({ label, logo, descriptions }: SkillBadgeProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const descriptionsClientSize = useClientSize<HTMLUListElement>();\n  const isInvert = ['Next.js'].includes(label);\n\n  return (\n    <button\n      className=\"flex flex-col max-w-full border-solid select-none bg-text rounded-8 shrink-0 group dark:bg-bg border-1 border-text dark:border-text-muted h-fit\"\n      onClick={() => setIsOpen((prev) => !prev)}\n      data-open={isOpen}\n    >\n      <div className=\"flex items-center gap-12 px-16 py-8\">\n        <div\n          className=\"w-28 max-h-28 flex items-center shrink-0 grayscale brightness-125 data-[invert=true]:invert desktop:group-hover:invert-0 desktop:group-hover:brightness-100 desktop:group-hover:grayscale-0 group-data-[open=true]:invert-0 group-data-[open=true]:brightness-100 group-data-[open=true]:grayscale-0 transition-all\"\n          data-invert={isInvert}\n        >\n          {logo}\n        </div>\n        <p className=\"text-18-400 text-bg dark:text-text text-nowrap\">\n          {label}\n        </p>\n      </div>\n\n      <div\n        className=\"-mx-1 transition-all duration-300 ease-in\"\n        style={{\n          width: isOpen ? descriptionsClientSize.size[0] : 0,\n          height: isOpen ? descriptionsClientSize.size[1] : 0,\n        }}\n      >\n        <ul\n          ref={descriptionsClientSize.assignRef}\n          className=\"pb-16 px-16 group-data-[open=false]:absolute group-data-[open=false]:opacity-0 group-data-[open=false]:pointer-events-none transition-opacity text-left duration-500 group-data-[open=false]:duration-0 list-disc w-full max-w-[calc(calc(min(100vw,67.5rem)-3rem-1em)/2)] mobile:max-w-[calc(100vw-3rem)]\"\n        >\n          {descriptions.map((description, index) => (\n            <li\n              key={index}\n              className=\"mt-8 ml-24 text-bg dark:text-text text-18-400\"\n            >\n              <RichText value={description} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </button>\n  );\n};\n","import React from 'react';\nimport { SkillInfo } from '..';\nimport { SkillBadge } from './skill-badge';\n\ntype CategorizedSkillsProps = {\n  title: string;\n  skills: SkillInfo[];\n};\n\nexport const CategorizedSkills = ({\n  title,\n  skills,\n}: CategorizedSkillsProps) => {\n  return (\n    <div className=\"\">\n      <h3 className=\"text-20-700\">{title}</h3>\n      <div className=\"flex flex-wrap gap-y-8 gap-x-12 mt-8 relative\">\n        {skills.map((skillInfo, index) => (\n          <SkillBadge key={index} {...skillInfo} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TitledSection } from '../_common/titled-section';\nimport { logos } from './_assets';\nimport { CategorizedSkills } from './categorized-skills';\n\nexport type SkillInfo = {\n  label: string;\n  logo: React.ReactElement;\n  descriptions: string[];\n};\n\nconst skills: Record<string, SkillInfo[]> = {\n  Language: [\n    {\n      label: 'JavaScript',\n      logo: logos.javascript,\n      descriptions: [\n        'DOM 조작, 비동기 처리, 이벤트 처리와 같은 자바스크립트 기본 기능에 대해 이해하고 이를 활용할 수 있습니다.',\n        'destructuring, spread/rest 연산자, 화살표 함수 등 ES6 문법에 익숙하며 효율적인 코드 작성이 가능합니다.',\n        'map, filter, reduce와 같은 고차 함수를 능숙하게 다룰 수 있습니다.',\n      ],\n    },\n    {\n      label: 'TypeScript',\n      logo: logos.typescript,\n      descriptions: [\n        '견고한 타입 시스템을 바탕으로 백엔드 스키마에 따라 적절한 도메인 기반 타입을 작성할 수 있습니다.',\n        'generic type을 활용하여 **유연하고 재사용 가능**한 타입 및 React component를 개발할 수 있습니다.',\n        '타입 가드를 통해 런타임 에러를 방지하고 type-safety한 로직을 작성할 수 있습니다.',\n      ],\n    },\n  ],\n  'Framework & Library': [\n    {\n      label: 'React',\n      logo: logos.react,\n      descriptions: [\n        'useMemo, useCallback, useRef 등의 hook과 memo, forwardRef 등의 API를 적절하게 사용하여 최적화된 React App을 개발할 수 있습니다.',\n        'Context API, createPortal API, HOC, compound component 등 고급 기능이나 패턴을 필요하에 따라 적절하게 활용할 수 있습니다.',\n        'react-hook-form과 zod를 활용하여 견고한 form validation을 구성한 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'Next.js',\n      logo: logos.nextjs,\n      descriptions: [\n        'getServerSideProps를 활용해 상품 페이지별로 동적인 OG meta tag를 삽입하여 SEO를 최적화하고, 소셜 미디어 공유 시 미리보기 정보 제공 및 검색엔진에서 상위에 노출되도록 개선한 경험이 있습니다.',\n        'server action, server component, app routing 등 Next.js 최신 버전의 server-side 기능을 활용해 웹 어플리케이션을 구현한 경험이 있습니다.',\n        'on-demand SSR, SSG, ISR 등 다양한 방식의 SSR에 대해 이해하고 이를 필요에 따라 선택할 수 있습니다.',\n      ],\n    },\n    {\n      label: 'Gatsby',\n      logo: logos.gatsby,\n      descriptions: [\n        'Markdown 파일을 기반으로 블로그 콘텐츠를 관리하고, gatsby-transformer-remark를 사용해 효율적인 페이지 생성을 구현했습니다.',\n        'wrapPageElement을 통해 공통 레이아웃 컴포넌트를 적용하고, 중복 코드를 줄여 유지보수성을 향상시켰습니다.',\n        'gatsby-plugin-image 플러그인을 사용해 이미지 최적화를 수행하여 사이트 속도를 향상시켰습니다.',\n      ],\n    },\n    {\n      label: 'Svelte',\n      logo: logos.svelte,\n      descriptions: [\n        'React와 비교해 Svelte의 장점과 특징을 이해하고, 프로젝트 요구 사항에 따라 적절히 선택할 수 있습니다.',\n        '실무에서 Vite 기반의 프로젝트를 세팅하여 **CSR 웹 애플리케이션**을 개발하고 성공적으로 런칭한 경험이 있습니다.',\n        'local/session storage와 자동으로 연동, 초기에 데이터를 fetch하고 일정 주기로 refetch 등 **편리한 기능을 제공하는 custom store를 개발**해 생산성을 높인 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'TanStack Query',\n      logo: logos.tanstack,\n      descriptions: [\n        '견고한 컨벤션을 통해 일관적이고 재사용성 높은 query/mutation custom hook을 작성해 팀의 생산성을 크게 향상시킨 경험이 있습니다.',\n        '도메인별로 적절한 staleTime을 설정하여 효율적인 캐싱 전략을 구현하고, 높은 사용자 경험을 실현한 경험이 있습니다.',\n        'select 옵션을 활용해 반복되는 파싱이나 변환 작업을 처리하여 코드 가독성과 유지보수성을 높인 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'Tailwind CSS',\n      logo: logos.tailwindcss,\n      descriptions: [\n        'CSS 변수와 자체 개발한 플러그인을 활용해 동일한 키값으로 다양한 테마와 라이드모드/다크모드 색상을 사용할 수 있는 색상 설정 기능을 구현한 경험이 있습니다.',\n        'Tailwind 설정을 효율적으로 관리하기 위해 tailwind.config 파일의 세부 설정을 별도의 파일로 분리하여 프로젝트 유지보수성을 향상시킨 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'Emotion',\n      logo: logos.emotion,\n      descriptions: [\n        'Emotion의 styled와 css 함수를 사용하여 모듈화된 스타일링 시스템을 구축했습니다.',\n        'layout, spacing, flex-box, grid 등 다양한 종류의 스타일을 유연하게 적용할 수 있는, 디자인 시스템을 기반으로 쉽게 커스터마이징 가능한 UI 컴포넌트를 개발해 팀의 생산성을 크게 향상시켰습니다.',\n      ],\n    },\n  ],\n  Deployment: [\n    {\n      label: 'Azure DevOps',\n      logo: logos.azure,\n      descriptions: [\n        'Azure Repos를 사용해 프로젝트를 세팅하고, 브랜치 전략이나 코드 리뷰 정책 등 적절한 repository policy를 설정할 수 있습니다.',\n        'Azure Pipelines를 사용해 CI/CD 과정을 자동화하는 파이프라인을 구성하고, 안정적인 배포 프로세스를 관리한 경험이 있습니다.',\n        'Azure Boards를 사용해 Feature 단위의 티켓을 관리하여 성공적으로 업무를 완수한 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'Github',\n      logo: logos.github,\n      descriptions: [\n        'Github Actions를 사용해 NPM 및 Github Packages에 라이브러리를 배포하는 과정을 자동화한 경험이 있습니다.',\n        '실무에서 발견한 오픈소스 라이브러리의 버그를 수정해 기여하고, 해당 수정 사항이 최신 릴리즈에 반영된 경험이 있습니다.',\n      ],\n    },\n    {\n      label: 'AWS',\n      logo: logos.aws,\n      descriptions: [\n        'S3와 CloudFront를 사용한 정적 웹 사이트 배포로 사이트 속도를 개선하여 사용자 경험을 증대시킨 경험이 있습니다.',\n        'CloudFront에 Lambda@Edge를 적용함으로써 정적 리소스 요청에 대해 동적인 응답을 주도록 처리, 사용자 맞춤형 컨텐츠를 제공할 수 있습니다.',\n        'SST와 같은 도구를 활용하여 서버리스 웹 애플리케이션을 배포하고 인프라 관리 및 배포 과정을 자동화한 경험이 있습니다.',\n      ],\n    },\n  ],\n  Tools: [\n    {\n      label: 'VS Code',\n      logo: logos.vscode,\n      descriptions: [\n        '린터나 코드 하이라이터, 유틸리티 등의 확장 기능을 필요에 따라 적용하여 생산성을 높이고 있습니다.',\n        'React component를 작성하는 code snippet을 만들고 공유하여 팀의 생산성을 향상시킨 경험이 있습니다.',\n        'multi-cursor 기능을 활용해 반복 작업을 최소화하고 효율적으로 코드를 작성합니다.',\n      ],\n    },\n    {\n      label: 'Figma',\n      logo: logos.figma,\n      descriptions: [\n        '간단한 개인 프로젝트에서 Figma로 UI/UX를 직접 설계하고, 이를 바탕으로 웹 애플리케이션을 완성한 경험이 있습니다.',\n        '오토 레이아웃, 컴포넌트와 바리에이션, 스타일과 변수 등 피그마 기능에 대한 지식을 바탕으로 디자이너와 원활한 소통이 가능합니다.',\n      ],\n    },\n  ],\n};\n\ntype SkillsSectionProps = {};\n\nexport const SkillsSection = ({}: SkillsSectionProps) => {\n  return (\n    <TitledSection title=\"Skills\">\n      <div className=\"flex flex-col items-stretch gap-24\">\n        {Object.entries(skills).map(([title, skills], index) => (\n          <CategorizedSkills key={index} title={title} skills={skills} />\n        ))}\n      </div>\n    </TitledSection>\n  );\n};\n","import React from 'react';\nimport { ProfileSection } from './profile-section';\nimport { ProjectSection } from './project-section';\nimport { SkillsSection } from './skills-section';\n\ntype AboutScreenProps = {};\n\nexport const AboutScreen = ({}: AboutScreenProps) => {\n  return (\n    <article className=\"px-24 py-48 flex flex-col items-stretch gap-56\">\n      <ProfileSection />\n      <SkillsSection />\n      <ProjectSection />\n    </article>\n  );\n};\n","import { type PageProps } from 'gatsby';\nimport React from 'react';\nimport { Seo } from 'src/components/common/seo';\nimport { AboutScreen } from 'src/components/screens/about-screen';\n\nexport const Head = (props: PageProps) => <Seo title=\"About\" {...props} />;\n\nconst AboutPage = ({}: PageProps) => {\n  return <AboutScreen />;\n};\n\nexport default AboutPage;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","RouterUtils","push","url","navigate","back","BackButton","_ref","label","React","NavButton","onClick","CustomImage","ratio","props","paddingBottom","undefined","Object","assign","currentTarget","dataset","loaded","error","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","property","content","description","ContentMarkdownSection","html","useGithubProfileStore","create","set","initialState","isError","data","profile","async","response","fetch","json","getGithubProfile","Avatar","avatarUrl","ContactLink","iconName","href","target","Icon","size","color","contents","links","descriptions","Introduce","link","index","lang","ProfileSection","_githubProfile$data","_githubProfile$data2","githubProfile","state","avatar_url","name","TitledSection","subtitle","thumbnails","harmony","StaticImage","require","orderhop","uzzim","ProjectCard","id","isReverse","to","ProjectDetailDrawer","isOpen","onClose","isMounted","useIsMounted","useEffect","document","documentElement","overflow","createPortal","AnimatePresence","motion","div","initial","animate","exit","variants","enter","section","translateX","ease","duration","body","ProjectSection","projects","useProjects","allMarkdownRemark","useStaticQuery","nodes","pageProps","usePage","pop","URLSearchParams","search","get","poppedProject","find","project","fields","isDetailDrawerOpen","frontmatter","logos","aws","azure","emotion","figma","gatsby","github","nextjs","react","svelte","tailwindcss","tanstack","typescript","javascript","vscode","initialSize","RichText","value","parts","split","part","startsWith","endsWith","SkillBadge","logo","setIsOpen","useState","descriptionsClientSize","useClientSize","useRef","setSize","assignRef","element","rect","getBoundingClientRect","isAssigned","isInvert","includes","prev","CategorizedSkills","skills","skillInfo","Language","Deployment","Tools","SkillsSection","entries","_ref2","AboutScreen","Head"],"sourceRoot":""}