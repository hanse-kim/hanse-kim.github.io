{"version":3,"file":"component---src-pages-about-tsx-e98978cb71d9dc37b9b2.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/stores/github-profile-store.ts","webpack://hanse-kim.dev/./src/components/screens/about-screen/sections/profile-section/avatar.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/sections/profile-section/contact-link.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/sections/profile-section/introduce.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/sections/profile-section/index.tsx","webpack://hanse-kim.dev/./src/components/screens/about-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/about.tsx"],"sourcesContent":["import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity duration-500 data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          data-loaded={false}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-alt animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { QueryStoreValue } from 'src/_libs/types/common';\nimport { create } from 'zustand';\n\ntype StoreValue = QueryStoreValue<GithubProfile>;\n\ntype GithubProfile = {\n  avatar_url: string;\n  name: string;\n  bio: string | null;\n};\n\nconst useGithubProfileStore = create<StoreValue>((set) => {\n  const fetchData = async () => {\n    try {\n      const profile = await getGithubProfile();\n      set({ isLoading: false, isError: false, data: profile });\n    } catch (e) {\n      set({ isLoading: false, isError: true, data: undefined });\n    }\n  };\n\n  fetchData();\n\n  return {\n    isLoading: true,\n    isError: false,\n    data: undefined,\n  };\n});\n\nexport const useGithubProfile = () => useGithubProfileStore((state) => state);\n\nasync function getGithubProfile() {\n  const url = `https://api.github.com/users/hanse-kim`;\n  const response = await fetch(url);\n  const profile = await response.json();\n\n  return profile as GithubProfile;\n}\n","import React from 'react';\nimport { CustomImage } from 'src/components/common/custom-image';\n\ntype AvatarProps = {\n  avatarUrl: string;\n  alt: string;\n};\n\nexport const Avatar = ({ avatarUrl, alt }: AvatarProps) => {\n  return (\n    <div className=\"w-180 h-180 border-solid rounded-full border-4 border-border overflow-hidden\">\n      <CustomImage className=\"object-cover\" src={avatarUrl} alt={alt} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Icon } from 'src/components/common/icon';\nimport { IconName } from 'src/components/common/icon/assets';\n\ntype ContactLinkProps = {\n  label: string;\n  url: string;\n  iconName: IconName;\n};\n\nexport const ContactLink = ({ label, url, iconName }: ContactLinkProps) => {\n  return (\n    <a className=\"flex items-center gap-4\" href={url}>\n      <Icon size={20} iconName={iconName} color={'muted'} />\n      <span className=\"text-text-muted text-16-500\">{label}</span>\n    </a>\n  );\n};\n","import React from 'react';\nimport { ContactLink } from './contact-link';\n\ntype IntroduceProps = {};\n\nexport const Introduce = ({}: IntroduceProps) => {\n  return (\n    <section className=\"flex flex-col gap-24 tablet:items-center\">\n      <div className=\"flex flex-col items-start gap-8 tablet:items-center\">\n        <h2 className=\"text-28-700\">Hi, I'm Hanse üêª</h2>\n        <div className=\"flex gap-18\">\n          <ContactLink\n            url=\"mailto:hansekim.dev@gmail.com\"\n            label=\"Email\"\n            iconName=\"mail\"\n          />\n          <ContactLink\n            url=\"https://github.com/hanse-kim\"\n            label=\"Github\"\n            iconName=\"github\"\n          />\n        </div>\n      </div>\n      <div className=\"text-18-400 hyphens-auto flex flex-col gap-8\" lang=\"en\">\n        <p>I'm a Frontend Developer working at a startup.</p>\n        <p>\n          This blog shares the challenges faced during development and how they\n          were solved üôÇ\n        </p>\n      </div>\n      {/* <button className=\"text-18-500 text-text-alt text-start\">\n        {'View More ->'}\n      </button> */}\n    </section>\n  );\n};\n","import React from 'react';\nimport { useGithubProfile } from 'src/stores/github-profile-store';\nimport { Avatar } from './avatar';\nimport { Introduce } from './introduce';\n\ntype ProfileSectionProps = {};\n\nexport const ProfileSection = ({}: ProfileSectionProps) => {\n  const githubProfile = useGithubProfile();\n\n  if (githubProfile.isLoading) {\n    return null;\n  }\n\n  if (githubProfile.isError) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center gap-24 mx-auto tablet:gap-12 tablet:flex-col tablet:items-center\">\n      <Avatar\n        avatarUrl={githubProfile.data.avatar_url}\n        alt={githubProfile.data.name}\n      />\n      <Introduce />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ProfileSection } from './sections/profile-section';\n\ntype AboutScreenProps = {};\n\nexport const AboutScreen = ({}: AboutScreenProps) => {\n  return (\n    <article className=\"px-24 py-48 flex flex-col items-stretch gap-56\">\n      <ProfileSection />\n      {/* <ProjectSection /> */}\n    </article>\n  );\n};\n","import { type PageProps } from 'gatsby';\nimport React from 'react';\nimport { Seo } from 'src/components/common/seo';\nimport { AboutScreen } from 'src/components/screens/about-screen';\n\nexport const Head = (props: PageProps) => <Seo title=\"About\" {...props} />;\n\nconst AboutPage = ({}: PageProps) => {\n  return <AboutScreen />;\n};\n\nexport default AboutPage;\n"],"names":["CustomImage","_ref","className","ratio","src","props","React","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","property","content","description","useGithubProfileStore","create","set","async","profile","url","response","fetch","json","getGithubProfile","isLoading","isError","data","fetchData","Avatar","avatarUrl","alt","ContactLink","label","iconName","href","Icon","size","color","Introduce","lang","ProfileSection","githubProfile","state","avatar_url","name","AboutScreen","Head"],"sourceRoot":""}