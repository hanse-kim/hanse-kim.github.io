{"version":3,"file":"component---src-templates-{tag}-tsx-a901fd306729ee4e1b39.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/post-card.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/templates/{tag}.tsx"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 mt-48 mb-24 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostCardProps = {\n  post: MarkdownRemark;\n  onHover: (postId: string) => void;\n  onBlur: (postId: string) => void;\n};\n\nexport const PostCard = React.memo(\n  ({ post, onHover, onBlur }: PostCardProps) => {\n    return (\n      <Link\n        to={post.fields.slug || ''}\n        onMouseEnter={() => onHover(post.fields.slug)}\n        onMouseLeave={() => onBlur(post.fields.slug)}\n        data-id={post.fields.slug}\n        state={linkStates.toLower}\n      >\n        <div\n          className={`px-20 py-32 overflow-hidden group rounded-16 bg-bg outline outline-transparent outline-1 desktop:hover:outline-blur desktop:hover:drop-shadow-post tablet:outline-border`}\n        >\n          {post.frontmatter.thumbnail?.publicURL && (\n            <CustomImage\n              src={post.frontmatter.thumbnail?.publicURL}\n              alt={post.frontmatter.title}\n              className=\"border-solid rounded-8 border-1 border-border mb-18\"\n            />\n          )}\n          <h2 className=\"break-all text-28-700 line-clamp-2\">\n            {post.frontmatter.title}\n          </h2>\n          <div className=\"mt-8 text-text-quote\">{`${post.frontmatter.date} Â· ${post.timeToRead} min read`}</div>\n          <div className=\"flex gap-12 mt-12\">\n            {post.frontmatter.tags.map((tag) => (\n              <TagButton key={tag} tag={tag} />\n            ))}\n          </div>\n          <p className=\"w-full mt-16 text-text-footer text-18-300 line-clamp-2 break-all\">\n            {post.excerpt}\n          </p>\n        </div>\n      </Link>\n    );\n  }\n);\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  const [hoveredPost, setHoveredPost] = useState<string | null>(null);\n\n  const handleBlurPost = useCallback(() => {\n    setHoveredPost(null);\n  }, []);\n\n  return (\n    <>\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `#post-list a>div {opacity: 1; transform: translateY(0px) scale(1); transition: all 0.25s;} @media (min-width:1081px) {#post-list:hover a:not([data-id=\"${hoveredPost}\"])>div {opacity: 0.4; transform: translateY(12px) scale(0.98);}}`,\n        }}\n      />\n      <section\n        id=\"post-list\"\n        className=\"grid grid-cols-3 p-24 desktop:gap-8 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch\"\n      >\n        {posts.map((post) => (\n          <PostCard\n            key={post.fields.slug}\n            post={post}\n            onHover={setHoveredPost}\n            onBlur={handleBlurPost}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< ì´ì  íì´ì§ë¡'}</NavButton>\n    </div>\n  );\n};\n","import { graphql, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { Seo } from 'src/components/common/seo';\nimport { PostListSection } from 'src/components/screen/blog-screen/post-list-section';\n\ntype PageContextType = {\n  tag: string;\n};\n\ntype DataType = {\n  allMarkdownRemark: {\n    edges: Array<{ node: MarkdownRemark }>;\n    totalCount: number;\n  };\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            hide\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps<DataType, PageContextType>) => (\n  <Seo title={`íê·¸: ${props.pageContext.tag}`} {...props} />\n);\n\nconst TagPage = ({\n  pageContext,\n  data,\n}: PageProps<DataType, PageContextType, { referrer: string }>) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <BackButton />\n      <Heading>Tag: {tag}</Heading>\n      <PostListSection posts={edges.map(({ node }) => node)} />\n    </>\n  );\n};\n\nexport default TagPage;\n"],"names":["linkStates","toLower","Heading","_ref","children","React","className","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","TagButton","tag","motion","div","whileHover","scale","transition","type","damping","stiffness","onClick","preventDefault","stopPropagation","RouterUtils","push","routes","state","PostCard","_post$frontmatter$thu","_post$frontmatter$thu2","post","onHover","onBlur","Link","to","fields","slug","onMouseEnter","onMouseLeave","frontmatter","thumbnail","publicURL","alt","date","timeToRead","tags","map","key","excerpt","PostListSection","posts","hoveredPost","setHoveredPost","useState","handleBlurPost","useCallback","dangerouslySetInnerHTML","__html","id","BackButton","NavButton","toBack","Head","pageContext","data","edges","allMarkdownRemark","_ref2","node"],"sourceRoot":""}