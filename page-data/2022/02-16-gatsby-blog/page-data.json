{"componentChunkName":"component---src-templates-{post}-tsx-content-file-path-null","path":"/2022/02-16-gatsby-blog/","result":{"data":{"markdownRemark":{"html":"<h2>개요</h2>\n<h4>어떤 블로그를 만들까?</h4>\n<p>내가 블로그를 하려는 이유는 기본적으로 공부한 내용을 정리하고 찾아보기 위함이다. 이에 필요한 기능들을 생각해봤다.</p>\n<ul>\n<li>\n<p>기본적으로 Jekyll처럼 마크다운 파일을 이용해 정적 페이지를 생성</p>\n</li>\n<li>\n<p>전체 포스트 목록을 볼 수 있는 페이지</p>\n</li>\n<li>\n<p>태그별 포스트 목록을 볼 수 있는 페이지</p>\n<ul>\n<li>각 포스트 목록은 페이지네이션함</li>\n</ul>\n</li>\n<li>\n<p>블로그 내 포스트 검색 기능</p>\n</li>\n</ul>\n<p>우선은 이 정도가 필요할 듯하다. 기본적인 컨셉은 위키처럼 원하는 내용을 쉽게 찾아볼 수 있도록 검색과 하이퍼링크를 적극적으로 활용하고 싶다.</p>\n<h4>왜 Gatsby인가?</h4>\n<p>예전에 정적 사이트 생성기 Jekyll로 블로그를 만들어보면서 고생한 적이 있다. Jekyll은 일단 Ruby 언어로 만들어져 환경 세팅부터 빌드까지의 과정이 복잡했고, 마음에 드는 테마를 찾아도 내 입맛에 맞게 커스터마이징하기가 너무 번거로웠다.</p>\n<p>그래서 이번에는 React 기반의 정적 사이트 생성기인 Gatsby를 사용하기로 했다. 처음에는 단순히 내게 익숙한 React 기반이라는 점 때문에 택했지만, 실제로 사용해보면서 매우 매력적인 프레임워크임을 알게 되었다.</p>\n<h4>Gatsby란?</h4>\n<p>GraphQL로 데이터를 다루고, React로 컴포넌트를 만들고, 빌드 결과물로서 정적인 파일들을 생성하는 프론트엔드 프레임워크이다.</p>\n<p>일반적인 React App은 빌드시 텅 빈 HTML과 JavaScript 파일을 생성한다. 이를 실행하면 JavaScript 코드를 통해 HTML 내용물을 렌더링하게 된다. 반면 Gatsby는 빌드 시 렌더링을 마친 정적 페이지들을 생성하고, 필요하다면 JavaScript 코드를 통해 추가적인 동작을 하게 된다.</p>\n<p>Gatsby는 다음과 같은 장점이 있다.</p>\n<ul>\n<li>코드 분할, 이미지 최적화, 중요한 스타일(critical style)의 인라인화, 레이지 로딩, 리소스 프리페치 등을 통해 뛰어난 성능을 보여준다.</li>\n<li>노드(node)라는 데이터 단위를 통한 유연한 데이터 구조와 다양한 플러그인을 통해 다양한 파일, 데이터베이스, CMS의 데이터를 다룰 수 있고, 쉽게 원하는 기능을 추가할 수 있다.</li>\n<li>빌드된 정적 파일들은 서버와 완전히 분리되어 있으므로 데이터베이스는 악의적인 요청이나 DDOS 공격 등에 대해 안전하다.</li>\n</ul>\n<p>덧붙여서 공식 문서의 튜토리얼(<a href=\"https://www.gatsbyjs.com/docs/tutorial/\">#</a>)이 아주 알차다. React나 GraphQL을 전혀 모르더라도 충분히 따라갈 수 있도록 step-by-step으로 친절하게 설명이 되어 있다. 만약 GraphQL, 혹은 React을 처음 배운다면 Gatsby로 시작해보는 것도 좋은 선택일 것이다.</p>\n<h4>주요 개념</h4>\n<p><img src=\".%5CGatsby.jpg\" alt=\"Gatsby\"></p>\n<ul>\n<li>Gatsby 사이트에서 사용되는 모든 데이터는 <b>GraphQL 데이터 계층(data layer)</b>에 위치한다.</li>\n<li>로컬 파일, 데이터베이스, CMS 등 다양한 데이터 <b>소스(source)</b>들은 <strong>source plugin</strong>을 통해 데이터 계층에 추가될 수 있다.</li>\n<li>데이터 계층의 정보들은 <b>노드(node)</b>라는 데이터 단위로 존재한다.</li>\n<li><strong>transformer plugin</strong>을 통해 기존 노드들로부터 새로운 노드들을 생성할 수 있다.</li>\n</ul>\n<blockquote>\n<p>예를 들어 컴퓨터의 파일시스템에 접근하게 해주는 <code>gatsby-source-filesystem</code> 플러그인을 이용해 특정 경로의 로컬 파일을 File 노드로서 데이터 계층에 추가할 수 있다.</p>\n<p>그리고 <code>gatsby-plugin-mdx</code> 플러그인을 사용하면 확장자가 <code>.mdx</code>인 File 노드들로부터 MDX 노드를 만들 수 있다. MDX 노드는 <code>.mdx</code>파일의 특성에 맞게 처리되어 파일 최상단의 YAML 정보, mdx 포맷으로 변환된 파일 내용 등의 정보를 포함한다.</p>\n</blockquote>\n<ul>\n<li>데이터 계층의 노드들은 <strong>GraphQL 쿼리</strong>를 사용해 리액트 컴포넌트에서 사용할 수 있다.</li>\n<li>언급했듯 다양한 플러그인을 설치하여 손쉽게 기능을 확장할 수 있다. Gatsby 플러그인을 사용하는 순서는 크게 다음과 같다.\n<ol>\n<li><code>npm</code>으로 플러그인을 설치한다.</li>\n<li><code>gatsby-config.js</code>의 <code>plugins</code> 필드에 설치한 플러그인을 추가한다.</li>\n<li>플러그인을 사용한다.</li>\n</ol>\n</li>\n</ul>\n<h2>진행과정</h2>\n<h4>0. Gatsby 프로젝트 생성</h4>\n<p><code>npm</code>으로 <code>gatsby-cli</code>를 전역으로 설치하면 <code>gatsby</code> 명령어를 사용할 수 있게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> gatsby-cli\n$ gatsby <span class=\"token parameter variable\">-v</span>\n<span class=\"token operator\">></span> Gatsby CLI version: <span class=\"token number\">4.8</span>.0</code></pre></div>\n<p>이제 Gatsby 프로젝트를 시작하기 위한 두 가지 방법이 있는데,</p>\n<ul>\n<li><code>gatsby new</code>로 시작해서 처음부터 구현하는 방법</li>\n<li>일종의 boilerplate인 gatsby-starter를 사용하는 방법</li>\n</ul>\n<p>처음에는 스타터를 이용해 빠르게 시작할까도 생각해봤지만, 새로운 React 프레임워크를 만지는 건 오랫만이라 손이 근질근질하고 직접 구현해보고픈 욕구가 생겼다. 그래서 처음부터 만들어보는 것을 택했다.</p>\n<p><code>gatsby new</code> 명령어를 입력하면 초기설정과 함께 Gatsby 프로젝트를 생성할 수 있다. 나는 TypeScript, Emotion 정도만 선택하고 나머지는 필요할 때마다 추가하기로 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ gatsby new\n<span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">></span> √ Will you be using JavaScript or TypeScript?\n<span class=\"token operator\">></span> · TypeScript\n<span class=\"token operator\">></span> √ Will you be using a CMS?\n<span class=\"token operator\">></span> · No <span class=\"token punctuation\">(</span>or I'll <span class=\"token function\">add</span> it later<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> √ Would you like to <span class=\"token function\">install</span> a styling system?\n<span class=\"token operator\">></span> · Emotion</code></pre></div>\n<h4>1. 포스트 목록을 표시하기</h4>\n<p>우선은 <code>src/posts</code>에 더미 <code>.mdx</code> 파일들을 20개 정도 만들었다. 대강 이런 식이다.</p>\n<ul>\n<li><code>posts/post1/index.mdx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: 1번째 포스트입니다\ndate: 2022-01-01</span>\n<span class=\"token punctuation\">---</span></span>\n1번째 포스트의 내용입니다.</code></pre></div>\n<p>다음으로 몇 가지 필요한 플러그인을 추가했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-plugin-root-import\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-source-filesystem\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-plugin-mdx @mdx-js/mdx@v1 @mdx-js/react@v1</code></pre></div>\n<ul>\n<li><code>gatsby-config.js</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">siteMetadata</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'개발하고 기록하기'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token string\">'gatsby-plugin-root-import'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">posts</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/posts/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-mdx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.mdx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.md</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">gatsbyRemarkPlugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li><code>siteMetadata</code> 필드: 말 그대로 사이트의 메타데이터를 입력할 수 있다. 이 메타데이터는 별도의 플러그인 없이 GraphQL 쿼리로 접근 가능한 데이터 중 하나다.</li>\n<li><code>gatsby-plugin-root-import</code>: 절대경로 import를 사용하기 위한 플러그인.</li>\n<li><code>gatsby-source-filesystem</code>: 컴퓨터의 파일시스템을 사용하기 위한 source 플러그인.</li>\n<li><code>gatsby-plugin-mdx</code>: File node를 MDX node로 변환하는 transformer 플러그인.</li>\n<li><code>@mdx-js/mdx</code>: MDX를 구현한 라이브러리.</li>\n<li><code>@mdx-js/react</code>: MDX 구현을 React 컴포넌트에 매핑하기 위한 라이브러리.</li>\n</ul>\n</blockquote>\n<p>이제 <code>src/posts</code> 안에 있는 파일들은 File node로서 데이터 계층에 추가되고, 그 중 확장자가 <code>.mdx</code>인 노드들로부터 MDX node들이 생성될 것이다. <code>gatsby develop</code> 명령어로 개발자 모드로 실행하고 GraphiQL(<code>localhost:8000/___graphql</code>)로 들어가서 확인해볼 수 있다.</p>\n<p><img src=\".%5CGraphiQL.png\" alt=\"GraphiQL\"></p>\n<blockquote>\n<ul>\n<li>id: 각 노드의 고유 id</li>\n<li>frontmatter: mdx 파일 최상단의 YAML 정보</li>\n<li>body: mdx 포맷으로 변환된 파일 내용</li>\n</ul>\n</blockquote>\n<p>이 GraphiQL 도구는 데이터 계층에 추가된 노드들을 탐색하고 필요한 쿼리를 작성하는 데 유용하다.</p>\n<p>이제 데이터도 추가했고 쿼리도 작성했으니 실제로 사이트에 띄워봤다.</p>\n<ul>\n<li><code>src/types.ts</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Node<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SiteNode</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MdxNode</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">{</span>\n  frontmatter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    date<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  body<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code>src/components/layout.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> useStaticQuery<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>SiteNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Layout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useStaticQuery</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>site<span class=\"token operator\">:</span> SiteNode<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>title <span class=\"token operator\">||</span> data<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>siteMetadata<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Layout<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li><code>Layout</code> 컴포넌트: 블로그의 모든 페이지에 공통적으로 들어갈 요소들을 래핑한 컴포넌트. 지금은 <code>title</code> 태그 뿐이지만 추후 header, footer 등 정적인 요소를 추가할 것이다.</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>src/pages/blog/index.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> PageProps<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataType</span> <span class=\"token punctuation\">{</span>\n  allMdx<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    nodes<span class=\"token operator\">:</span> MdxNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  {\n    allMdx(sort: {order: DESC, fields: frontmatter___date}) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n        }\n        body\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>allMdx<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Posts</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>allMdx<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BlogPage<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>일반 컴포넌트와 페이지 컴포넌트에서 GraphQL 쿼리를 사용하는 방식이 다르다.\n<ul>\n<li>일반 컴포넌트는 <code>useStaticQuery</code> 훅에 쿼리를 넣어 데이터를 가져올 수 있다.</li>\n<li>페이지 컴포넌트는 페이지 쿼리를 <code>export</code>하여 컴포넌트의 props로 데이터를 가져올 수 있다.</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>결과 (<code>localhost:8000/blog</code>)</li>\n</ul>\n<p><img src=\".%5Cpost-%EB%AA%A9%EB%A1%9D.png\" alt=\"post 목록\"></p>\n<p>날짜에 대해 내림차순으로 데이터를 가져왔으므로 최신순으로 포스트 목록이 잘 보인다!</p>\n<h4>2. MDX 파일로부터 정적 페이지 생성하기</h4>\n<p>Gatsby는 기본적으로 <strong>File System Route API</strong>라는 기능을 제공한다. <code>src/pages</code> 안에  <code>{nodeType.fieldName}.tsx</code>와 같은 식으로 페이지 템플릿 컴포넌트를 작성하면 데이터 계층의 노드를 바탕으로 동적 페이지를 생성하고 라우팅한다.</p>\n<ul>\n<li><code>nodeType</code>은 어떤 노드로부터 페이지를 만들지를 결정한다.</li>\n<li><code>fieldName</code>은 노드의 어떤 필드를 URL에 사용할지를 결정한다.</li>\n</ul>\n<p>MDX 노드는 기본적으로 <code>slug</code> 필드를 갖는데, <code>.mdx</code> 파일의 경로 + 파일이름이 <code>path/file-name</code> 꼴로 인코딩되어 있어 URL에 사용하기 적합하다.</p>\n<p>마크다운 문법이 잘 표시되는지 확인하기 위해 포스트 내용을 조금 수정했다. 그리고 포스트 템플릿 페이지를 만들고 포스트 목록 페이지에도 포스트 페이지에 접근할 수 있도록 링크를 추가했다.</p>\n<ul>\n<li><code>posts/post1/index.mdx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: 1번째 포스트입니다\ndate: 2022-01-01</span>\n<span class=\"token punctuation\">---</span></span>\n1번째 포스트의 내용입니다.\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> heading1</span>\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> heading2</span>\n<span class=\"token title important\"><span class=\"token punctuation\">###</span> heading3</span>\n\n<span class=\"token list punctuation\">-</span> first\n<span class=\"token list punctuation\">-</span> second\n<span class=\"token list punctuation\">-</span> third</code></pre></div>\n<ul>\n<li><code>src/pages/blog/post/{mdx.slug}.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> PageProps<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MDXRenderer<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-plugin-mdx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataType</span> <span class=\"token punctuation\">{</span>\n  mdx<span class=\"token operator\">:</span> MdxNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n      }\n      body\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PostPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>mdx<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>/blog<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">목록으로 가기</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">작성일: </span><span class=\"token punctuation\">{</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>mdx<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PostPage<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>\n<p>템플릿 페이지의 페이지 쿼리는 다른 페이지 쿼리와 조금 다르다. 쿼리 변수를 설정하고 원하는 노드를 찾기 위한 조건을 설정해줘야 한다. 위와 같은 경우 $id 쿼리 변수를 받아 id 필드가 $id 변수와 동일한 노드를 찾는 쿼리이다.</p>\n<p>쿼리 변수로 사용될 값은 페이지 컴포넌트의 <code>props</code> 중 <code>pageContext</code>의 필드 중에서 정할 수 있는데, 일반적으로 노드 id가 사용된다.</p>\n</li>\n<li>\n<p><code>MDXRenderer</code> 컴포넌트를 사용해 MDX 노드의 <code>body</code>를 HTML로 바꾸어 표시할 수 있다.</p>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>src/pages/blog/index.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  {\n    allMdx(sort: {order: DESC, fields: frontmatter___date}) {\n      nodes {\n\t\t...\n        slug\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>allMdx<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      ...\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>allMdx<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>slug <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/blog/post/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            ...\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span></code></pre></div>\n<ul>\n<li>결과 (<code>localhost:8000/blog/post/post1/</code>)</li>\n</ul>\n<p><img src=\".%5C%ED%8F%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80.png\" alt=\"포스트페이지\"></p>\n<p><code>.mdx</code> 파일로부터 페이지가 잘 생성되고, 또 Markdown 문법이 HTML 문법으로 잘 변환된 것을 확인할 수 있다.</p>\n<p>여기까지가 튜토리얼 6번까지 진행하며 구현할 수 있는 내용이다.</p>\n<h4>3. 태그별 목록 구현하기</h4>\n<p><a href=\"https://www.gatsbyjs.com/docs/adding-tags-and-categories-to-blog-posts/\">Creating Tags Pages for Blog Posts</a></p>\n<p>웬만한 내용은 공식홈페이지에 엄청 친절하게 쓰여 있다!</p>\n<p>우선 이런 식으로 <code>.mdx</code> 더미파일에 태그들을 적당히 추가했다.</p>\n<ul>\n<li><code>posts/post1/index.mdx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: 1번째 포스트입니다\ndate: 2022-01-01\ntags: [\"tag1\", \"tag2\"]</span>\n<span class=\"token punctuation\">---</span></span>\n\n...</code></pre></div>\n<p>이제 쿼리를 통해 MDX 노드의 frontmatter 필드에서 tags 필드가 추가된 것을 확인할 수 있다.</p>\n<p><img src=\".%5C%ED%83%9C%EA%B7%B8-%ED%99%95%EC%9D%B8.png\" alt=\"태그 확인\"></p>\n<p>다음으로 태그를 통해 포스트 목록을 보여주는 페이지를 만들어야 한다. File System Route API은 별다른 설정 없이 자동으로 페이지를 생성할 수 있지만, 직접 페이지를 생성해야 할 때에는 <strong>Gatsby Node API</strong>을 사용해야 한다. 지금처럼 노드가 아닌 데이터를 통해 페이지를 생성하는 경우가 그렇다.</p>\n<p>Gatsby Node API를 사용하여 페이지를 생성하는 과정은 다음과 같다.</p>\n<ol>\n<li>템플릿 컴포넌트를 작성한다.</li>\n<li>작성한 템플릿 컴포넌트를 <code>gatsby-node.js</code>의 <code>createPages</code>에서 사용하여 페이지를 생성한다.</li>\n</ol>\n<ul>\n<li><code>src/templates/tag.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> PageProps<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PageContextType</span> <span class=\"token punctuation\">{</span>\n  tag<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataType</span> <span class=\"token punctuation\">{</span>\n  allMdx<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    edges<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>node<span class=\"token operator\">:</span> MdxNode<span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    totalCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n    ) {\n      totalCount\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">TagPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>pageContext<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token punctuation\">,</span> PageContextType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> pageContext<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>edges<span class=\"token punctuation\">,</span> totalCount<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>allMdx<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> tagHeader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>totalCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> post</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n    totalCount <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'s'</span>\n  <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> tagged with \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>tag<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>tagHeader<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>slug <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/blog/post/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>/blog/tags<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">All tags</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TagPage<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code>gatsby-node.js</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> _ <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPostBuild</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>reporter<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> reporter<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Page build is done!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>createPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query {\n      tagsGroup: allMdx(limit: 2000) {\n        tags: group(field: frontmatter___tags) {\n          value: fieldValue\n          totalCount\n        }\n      }\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    reporter<span class=\"token punctuation\">.</span><span class=\"token function\">panicOnBuild</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error while running GraphQL query.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> tags <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>tagsGroup<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">;</span>\n  tags<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/blog/tags/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/templates/tag.tsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      context<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        tag<span class=\"token operator\">:</span> tag<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code>src/pages/blog/tags.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> kebabCase <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/kebabCase'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Link<span class=\"token punctuation\">,</span> graphql<span class=\"token punctuation\">,</span> PageProps<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataType</span> <span class=\"token punctuation\">{</span>\n  tagsGroup<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    tags<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      totalCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    tagsGroup: allMdx(limit: 2000) {\n      tags: group(field: frontmatter___tags) {\n        value: fieldValue\n        totalCount\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">TagsPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    tagsGroup<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>tags<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tags</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>tags<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/blog/tags/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> (</span><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">.</span>totalCount<span class=\"token punctuation\">}</span><span class=\"token plain-text\">)\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TagsPage<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>\n<p>템플릿 컴포넌트는 앞서 작성한 템플릿 페이지 컴포넌트와 거의 유사하다. <code>pageContext</code>의 <code>tag</code> 값을 쿼리 변수로 사용하고 이 쿼리 변수를 <code>frontmatter</code>의 <code>tags</code>가 포함하는 MDX 노드들을 가져온다.</p>\n</li>\n<li>\n<p><code>gatsby-node.js</code>에서는 Graphql 쿼리를 날려 결과값을 받아오고, 이 결과값과 템플릿 컴포넌트를 이용해 페이지를 생성한다.</p>\n</li>\n<li>\n<p>추가적으로 태그 목록을 확인할 수 있는 페이지를 만들었다.</p>\n</li>\n<li>\n<p>페이지가 잘 생성되었는지 궁금할 때엔 GraphiQL에서 다음과 같은 쿼리를 날려보면 쉽게 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// GraphQL query\n{\n  allSitePage {\n    nodes {\n      path\n    }\n  }\n}\n                                            \n// 결과 예\n{\n  \"data\": {\n    \"allSitePage\": {\n      \"nodes\": [\n        {\n          \"path\": \"/blog/tags/tag-0/\"\n        },\n        {\n          \"path\": \"/blog/tags/tag-1/\"\n        },\n        ...\n      ]\n    }\n  },\n  \"extensions\": {}\n}</code></pre></div>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>결과1 (<code>localhost:8000/blog/tags</code>)</li>\n</ul>\n<p><img src=\".%5Ctags.png\" alt=\"tags\"></p>\n<ul>\n<li>결과2 (<code>localhost:8000/blog/tags/tag-1</code>)</li>\n</ul>\n<p><img src=\".%5Ctag1.png\" alt=\"tag1\"></p>\n<p>태그 목록으로부터 페이지가 잘 생성된 것을 확인할 수 있다.</p>\n<h4>중간 정리</h4>\n<p>어느 정도 기능이 자리잡은 만큼 코드를 한번 정리했다.</p>\n<ul>\n<li>\n<p>URL을 간소화하기 위해 <code>/blog</code> 아래에 위치한 페이지들을 전부 루트 위치로 이동시켰다.</p>\n</li>\n<li>\n<p>여러 페이지에서 사용되는 UI요소를 컴포넌트로 분리했다. (<code>/blog</code>, <code>/tag/{tag}</code>에서 사용되는 포스트 목록 등)</p>\n</li>\n<li>\n<p>여러 곳에서 쓰이는 로직은 <code>src/utils.ts</code>로 분리했다.</p>\n</li>\n<li>\n<p><code>src/components/postList/index.tsx</code></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PostItem <span class=\"token keyword\">from</span> <span class=\"token string\">'./PostItem'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PostList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>nodes<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>nodes<span class=\"token operator\">:</span> MdxNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">node</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PostList<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code>src/components/postList/postItem.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Link<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>getPostUrl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/utils'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> TagButton <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/tagButton'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PostItem</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>node<span class=\"token operator\">:</span> MdxNode<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getPostUrl</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TagButton</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">tag</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PostItem<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code>src/utils.ts</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> noUrl <span class=\"token operator\">=</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getPostUrl</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>slug<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> slug <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/post/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>slug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> noUrl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTagUrl</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tag<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> tag <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/tag/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> noUrl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그래서 여기까지 프로젝트 구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">root\n├src\n│├components\n││├layout\n││├postList\n││└tagButton\n│├images\n│├pages\n││├post\n│││└{mdx.slug}.tsx\n││├404.tsx\n││├blog.tsx\n││├index.tsx\n││└tag.tsx\n│├templates\n││└{tag}.tsx\n│├types.ts\n│└utils.ts\n├gatsby-config.js\n├gatsby-node.js\n├...</code></pre></div>\n<h4>4. 포스트 목록 페이지네이션</h4>\n<p><b>페이지네이션(pagination)</b>, 또는 페이징(paging)이란 많은 양의 데이터를 여러 페이지로 나누어 보여주는 과정을 말한다. 보여줄 데이터 양이 방대할 경우 데이터를 가져오거나 렌더링하는 과정이 오래 걸릴 수 있고, 보기에도 힘들어지므로 적절하게 페이지네이션 처리를 할 필요가 있다.</p>\n<p>Gatsby 공식 문서에서 소개하는 방법(<a href=\"https://www.gatsbyjs.com/docs/adding-pagination/\">#</a>)은 앞서 태그 페이지를 생성한 것처럼 Gatsby Node API를 이용해 각 페이지별 정적 페이지를 생성하는 것이다. 그러나 이 방법은 페이지네이션이 필요한 페이지를 생성할 때마다 새로 <code>createPages()</code>에서 페이지 작성 코드를 추가해줘야 한다는 문제가 있다.</p>\n<p>그래서 나는 이 방법 대신 리액트 컴포넌트와 훅을 이용해 client-side 페이지네이션을 구현하기로 했다. 처음에 모든 데이터를 가져온 후 렌더링에만 페이지네이션을 적용하는 것이다. 이러면 적은 양의 데이터만 가져올 수 있다는 이점은 없어지지만, 블로그라는 사이트 특성상 데이터가 많아봐야 수백 건일 것이므로 크게 신경 쓸 부분은 아니라고 생각했다. 그리고 여전히 렌더링의 이점은 챙길 수 있다.</p>\n<p>페이지네이션에 필요한 요소로는 크게 두 가지를 생각했는데,</p>\n<ul>\n<li>원본 데이터에서 특정 페이지에 표시할 데이터를 뽑아내는 기능</li>\n<li>사용자가 페이지 이동을 할 수 있도록 UI를 제공하는 페이지 내비게이션</li>\n</ul>\n<p>전자는 훅으로, 후자는 훅과 컴포넌트로 구현했다. 특별히 신경 쓴 점이라면 재사용성을 고려해서 어떤 종류의 데이터라도 페이지네이션이 가능하도록 만들었다.</p>\n<ul>\n<li><code>src/hooks/usePagination.ts</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>useCallback<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> useMemo<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Options</span> <span class=\"token punctuation\">{</span>\n  itemsPerPage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  initialPage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> usePagination <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  data<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>itemsPerPage <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> initialPage<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>paginatedData<span class=\"token punctuation\">,</span> setPaginatedData<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>currPage<span class=\"token punctuation\">,</span> setCurrPage<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialPage <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> startIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>currPage <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> itemsPerPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> endIndex <span class=\"token operator\">=</span> currPage <span class=\"token operator\">*</span> itemsPerPage<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPaginatedData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>startIndex<span class=\"token punctuation\">,</span> endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">,</span> currPage<span class=\"token punctuation\">,</span> itemsPerPage<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> lastPage <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> itemsPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> itemsPerPage<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> setPage <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">></span> lastPage<span class=\"token punctuation\">)</span> page <span class=\"token operator\">=</span> lastPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> page <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setCurrPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>paginatedData<span class=\"token punctuation\">,</span> currPage<span class=\"token punctuation\">,</span> setPage<span class=\"token punctuation\">,</span> lastPage<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> usePagination<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>재사용이 용이하도록 데이터의 타입은 generic type을 사용했고 페이지당 항목 수, 처음에 표시할 페이지와 같은 값들을 옵션으로 변경할 수 있게 만들었다.</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>src/components/pageNav/index.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useEffect<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>range<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/utils/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PageButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./pageButton'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\n  currPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  lastPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setPage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>page<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  maxPageNavLength<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PageNav</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  currPage<span class=\"token punctuation\">,</span>\n  lastPage<span class=\"token punctuation\">,</span>\n  setPage<span class=\"token punctuation\">,</span>\n  maxPageNavLength <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">usePageNav</span><span class=\"token punctuation\">(</span>currPage<span class=\"token punctuation\">,</span> lastPage<span class=\"token punctuation\">,</span> maxPageNavLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageButton</span></span>\n        <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>&lt;<span class=\"token punctuation\">'</span></span>\n        <span class=\"token attr-name\">page</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">setPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setPage<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageButton</span></span>\n          <span class=\"token attr-name\">page</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">setPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setPage<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">selected</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currPage <span class=\"token operator\">===</span> page<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageButton</span></span>\n        <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>><span class=\"token punctuation\">'</span></span>\n        <span class=\"token attr-name\">page</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">[</span>pageList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">setPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setPage<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">[</span>pageList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> lastPage<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">usePageNav</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  currPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  lastPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  maxPageNavLength<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>pageList<span class=\"token punctuation\">,</span> setPageNavList<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> firstPageInNav <span class=\"token operator\">=</span> currPage <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currPage <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> maxPageNavLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> lastPageInNav <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>\n      firstPageInNav <span class=\"token operator\">+</span> maxPageNavLength<span class=\"token punctuation\">,</span>\n      lastPage <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPageNavList</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span>firstPageInNav<span class=\"token punctuation\">,</span> lastPageInNav<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>currPage<span class=\"token punctuation\">,</span> lastPage<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>pageList<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PageNav<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>\n<p>마찬가지로 재사용성을 위해 페이지 내비게이션의 최대길이를 받을 수 있도록 만들었다. <code>pageList</code>는 현재 페이지와 마지막 페이지를 받아 표시할 페이지의 리스트를 계산한 것이다.</p>\n<p>예를 들어 최대 페이지가 15일 때, 현재 페이지가 3이면 [1, 2, ..., 10]을, 현재 페이지가 12면 [11, 12, ..., 15]를 <code>return</code>하는 식이다.</p>\n</li>\n<li>\n<p><code>usePageNav</code> 훅은 이 컴포넌트에서만 쓰이는 지엽적인 로직이므로 별도의 파일로 분리하지는 않았다.</p>\n</li>\n<li>\n<p>페이지 내비게이션의 버튼 역할을 하는 <code>PageButton</code> 컴포넌트는 페이지가 바뀔 때마다(즉 <code>PageNav</code>의 <code>props</code>가 바뀔 때마다) 내비게이션 전체가 리렌더링되는 것을 막기 위해 <code>React.memo()</code>를 적용해서 최적화했다.</p>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>src/pages/blog.tsx</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> navigate<span class=\"token punctuation\">,</span> PageProps<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MdxNode<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PostList <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/postList'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> usePagination <span class=\"token keyword\">from</span> <span class=\"token string\">'src/hooks/usePagination'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PageNav <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/pageNav'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>allMdx<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>DataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>paginatedData<span class=\"token punctuation\">,</span> currPage<span class=\"token punctuation\">,</span> lastPage<span class=\"token punctuation\">,</span> setPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">usePagination</span><span class=\"token punctuation\">(</span>\n    allMdx<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>itemsPerPage<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>tags<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">tags</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Posts</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostList</span></span> <span class=\"token attr-name\">nodes</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>paginatedData<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageNav</span></span>\n        <span class=\"token attr-name\">currPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currPage<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">lastPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>lastPage<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">setPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setPage<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">maxPageNavLength</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BlogPage<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>임시로 페이지네이션이 잘 구현되었는지 확인하기 위해 페이지당 항목 수는 3으로, 페이지 내비게이션 길이는 5로 뒀고, 현재 선택중인 페이지는 글자색을 빨간색으로 표시하게 했다.</li>\n</ul>\n</blockquote>\n<ul>\n<li>결과 (<code>localhost:8000/blog</code>)</li>\n</ul>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLWxvGAgoVHDXLt-V6zsss-FzUmTFk52laXJcdVNAXzXGUpy7jBrg7UqkHYihbMVDqHsCsD-sH4hkG4jCOGy_yidLLR_Lhd_xP6fDn113JlcQjN4YsMi-o9aM20lQzGxZjZG3UhmNjiZ9Bszw0Dsf-hM=w480-h508-no?authuser=0\" alt=\"pagination\"></p>\n<p>client-side 페이지네이션이 잘 구현되었다.</p>\n<h2>후기</h2>\n<p>일단 블로그로서 정말 기본적인 틀은 갖췄다. 검색 기능까지 한번에 진행하고 싶었는데 생각보다 플러그인 적용에 애를 먹어서 나중에 다시 살펴봐야 될 것 같다.</p>\n<p>현재까지 포스트 목록 표시, 포스트 페이지 생성, 태그 페이지 생성, 포스트 목록 페이지네이션 기능을 만들었고, 앞으로 추가할 예정인 기능은 우선도 순으로 다음과 같다.</p>\n<ul>\n<li>블로그 내 포스트 검색 기능 추가</li>\n<li>디자인 추가\n<ul>\n<li>다크모드, 반응형 디자인 적용</li>\n</ul>\n</li>\n<li>댓글 기능 추가</li>\n<li>Google Analytics 추가</li>\n</ul>\n<br />\n<h2>Issue</h2>\n<h4>페이지 쿼리를 변경해도 반영이 되지 않는 문제</h4>\n<ul>\n<li>\n<p>증상: MDX 노드들을 가져오는 부분에서 중간에 페이지 쿼리에 slug 필드를 추가했을 때 변경점이 실제 데이터 fetch에 반영되지 않았다.</p>\n</li>\n<li>\n<p>원인: 쿼리를 이리저리 수정하거나 아예 지워도 이전 쿼리 상태로 동작하는 것을 보면 개발 모드에서 쿼리를 캐싱한 것이 문제가 된 것 같다.</p>\n</li>\n<li>\n<p>해결: <code>gatsby clean</code> 명령어로 캐시를 전부 날려서 해결했다.</p>\n</li>\n</ul>\n<h4>Gatsby Node API 사용 중 오류 발생</h4>\n<ul>\n<li>증상: 공식 홈페이지의 예제를 가져와 문법만 TypeScript 문법으로 수정하고 실행했을 때 <code>Cannot query field \"fields\" on type \"Mdx\".</code>와 같은 오류들이 발생했다.</li>\n<li>원인: 예제는 MarkdownRemark 노드를 사용하는 것이었는데 이게 MDX 노드와 구조가 달라 발생한 문제였다. (MarkdownRemark 노드는 fields 필드 안에 body 등의 필드가 들어 있었다)</li>\n<li>해당 쿼리를 MDX 노드에 맞게 수정해서 해결했다.</li>\n</ul>","frontmatter":{"title":"Gatsby 블로그 제작 - 페이지 생성","date":"2022-02-16","tags":["React","Gatsby","GraphQL"],"thumbnail":null},"timeToRead":13}},"pageContext":{"id":"a888348f-8528-5ed9-bc7c-92666dbd391c"}},"staticQueryHashes":["1147043159"],"slicesMap":{}}