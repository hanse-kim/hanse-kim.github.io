{"componentChunkName":"component---src-templates-{tag}-tsx","path":"/tags/java-script/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"93a4e517-9a99-59d1-9db1-47b66b2979e1","frontmatter":{"title":"클로저(Closure)","date":"2022-03-14","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/03-14-closure/"},"timeToRead":2,"excerpt":"요약 클로저란 자신이 정의된 렉시컬 환경을 기억하는 함수입니다. 클로저는 상태(state)를 유지하고 이것이 외부 요인에 의해 의도치 않게 변경되지 않도록 안전하게 은닉(information hiding)하기 위해 사용합니다. 클로저 클로저(Closure)란 자신이 정의된 렉시컬 환경을 기억하는 함수입니다. 위 예제에서 볼 수 있듯이, inner…"}},{"node":{"id":"d7fb10b1-e450-56c5-9f6c-2668c5b14ab9","frontmatter":{"title":"실행 컨텍스트(Execution Context)","date":"2022-03-10","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/03-10-execution-context/"},"timeToRead":2,"excerpt":"요약 실행 컨텍스트란 소스코드를 실행하는 데 필요한 환경을 제공하고 코드의 실행 결과를 관리하는 영역입니다. 코드의 실행 순서는 실행 컨텍스트 스택에 의해, 스코프와 식별자는 실행 컨텍스트의 렉시컬 환경에 의해 관리됩니다. 소스코드의 평가와 실행 자바스크립트 엔진은 소스코드를…"}},{"node":{"id":"4d0f8cd1-e3ff-5104-bd5d-0be8a4679ecf","frontmatter":{"title":"함수(Function)","date":"2022-03-09","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/03-09-function/"},"timeToRead":2,"excerpt":"요약 프로그래밍에서 함수란 코드의 재사용을 위해 특정한 동작을 수행하는 코드를 묶어 하나의 실행 단위로 만든 것을 말합니다. 함수를 정의하는 방법으로는 크게 함수 선언문과 함수 표현식이 있습니다. 함수 선언문: function…"}},{"node":{"id":"757f8d29-612c-5007-9d36-53e7c57dc55e","frontmatter":{"title":"데이터 타입(Data Type)","date":"2022-03-08","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/03-08-data-type/"},"timeToRead":2,"excerpt":"요약 데이터 타입이란 프로그래밍에서 여러 종류의 데이터를 식별하기 위한 분류입니다. JavaScript는 동적 타입 언어로, 변수의 타입이 고정되지 않으며 모든 타입의 값으로 할당 및 재할당이 가능합니다. JavaScript…"}},{"node":{"id":"4763a8d2-13a3-5934-bfec-3151d20bd23e","frontmatter":{"title":"표현식(Expression)과 문(Statement)","date":"2022-03-07","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/03-07-expression-and-statement/"},"timeToRead":1,"excerpt":"요약 문(statement)이란 토큰(token)으로 구성된 프로그램의 최소 실행 단위이다. 선언문, 할당문, 조건문, 반복문 등, 문을 통해 컴퓨터가 어떤 작업을 수행하도록 명령할 수 있다. 문의 집합이 프로그램이며, 문을 작성하고 순서에 맞게 나열하는 작업을 프로그래밍이라 한다. 표현식(expression…"}},{"node":{"id":"bafc7b3a-aa65-5b7e-bfc3-218ef73b9851","frontmatter":{"title":"논리 연산자를 이용한 간단한 조건부 표현식","date":"2022-03-05","tags":["TIL","JavaScript"],"hide":true},"fields":{"slug":"/2022/03-05-idomatic-expression-with-logical-operation/"},"timeToRead":1,"excerpt":"논리 연산자 논리 연산자란 조건문에서 흔히 사용하는 &&(AND), ||(OR), !(NOT) 등의 연산자를 말합니다. A && B: A가 참이면 B를, 거짓이면 A를 리턴한다. A || B: A가 참이면 A를, 거짓이면 B를 리턴한다. !A: A가 참이면 false를, 거짓이면 true를 리턴합니다. 여기서 말하는 참(Truthy), 거짓(Falsy…"}},{"node":{"id":"87dc0567-0b9d-5cc8-aae3-cbfd66117cf8","frontmatter":{"title":"호이스팅(Hoisting)","date":"2022-02-28","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/02-28-hoisting/"},"timeToRead":2,"excerpt":"요약 호이스팅이란 JavaScript의 특징으로, 함수나 변수의 선언을 코드의 최상단으로 끌어올린 것처럼 동작하는 방식을 말합니다. 호이스팅은 JavaScript…"}},{"node":{"id":"4e2ca234-8a48-5bd0-9321-4fdb100d374e","frontmatter":{"title":"this","date":"2022-02-27","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/02-27-this/"},"timeToRead":2,"excerpt":"요약 JavaScript에서 this는 함수가 호출되는 방식에 따라 달라집니다. 전역 컨텍스트: 전역 객체를 가리킵니다. 함수 단순 호출: 엄격 모드라면 undefined…"}},{"node":{"id":"5d08516a-5acc-565a-bfd3-6d29d79cbb16","frontmatter":{"title":"즉시 실행 함수(IIFE)","date":"2022-02-26","tags":["JavaScript"],"hide":false},"fields":{"slug":"/2022/02-26-immediately-invoked-function-expression/"},"timeToRead":2,"excerpt":"요약 IIFE란 정의되자마자 즉시 실행되는 JavaScript 함수를 말합니다. 함수 표현식을 감싸는 큰 괄호(그룹 연산자)와, 이 함수를 실행시키는 괄호(호출 연산자)로 구성되어 있습니다.\n(예: (function() {...})();) IIFE…"}},{"node":{"id":"e4e047fd-b15a-5e76-ba6a-b2f4d69e1b2e","frontmatter":{"title":"화살표 함수(Arrow Function)","date":"2022-02-24","tags":["JavaScript","ES6"],"hide":false},"fields":{"slug":"/2022/02-24-arrow-function/"},"timeToRead":2,"excerpt":"요약 화살표 함수란 ES6부터 추가된 새로운 형태의 함수 표현식입니다. 기존의 function 키워드를 이용한 함수 표현식에 비해 간결하고 직관적인 함수 정의가 가능합니다. 화살표 함수의 특징은 this를 갖지 않는다는 점입니다. 기존 함수는 자신이 호출된 위치에 따라 this…"}}]}},"pageContext":{"tag":"JavaScript"}},"staticQueryHashes":["1147043159"],"slicesMap":{}}