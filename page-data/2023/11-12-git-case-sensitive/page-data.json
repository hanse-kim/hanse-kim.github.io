{"componentChunkName":"component---src-templates-{post}-tsx-content-file-path-null","path":"/2023/11-12-git-case-sensitive/","result":{"data":{"markdownRemark":{"html":"<h2>요약</h2>\n<p>운영체제나 파일 시스템에 따라 Git 저장소는 파일명의 대소문자를 구분하지 않기도 합니다.</p>\n<p>이 경우, 다음과 같은 방법으로 파일명의 대소문자를 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">mv</span> myfile.txt MyFile.txt</code></pre></div>\n<br />\n<h2>상세</h2>\n<p>Git의 <code>core.ignorecase</code> 설정값은 기본적으로 <code>false</code>입니다. 하지만 <code>git init</code>이나 <code>git clone</code>을 통해 저장소를 생성할 때, 운영체제나 파일 시스템에 따라 <code>true</code>로 설정되기도 합니다.</p>\n<p>대표적으로 macOS의 APFS나 Windows의 NTFS는 대소문자를 구분하지 않는 파일 시스템입니다. 따라서 <code>core.ignorecase</code> 설정은 <code>true</code>가 되어 Git에서도 대소문자를 구분하지 않습니다.</p>\n<p>그러나 이로 인해 특정 커밋에서 파일명을 변경할 때 대소문자만 변경하려고 한다면 의도대로 변경이 되지 않을 것입니다. 예를 들어 다음과 같은 작업을 수행했다고 합시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> my-repo\n<span class=\"token builtin class-name\">cd</span> my-repo\n<span class=\"token function\">git</span> init\n<span class=\"token function\">touch</span> test.txt\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\ng commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"add test.txt\"</span></code></pre></div>\n<p>이제 이 저장소의 인덱스에는 <code>test.txt</code> 파일이 추가되었다. 인덱스는 <code>git ls-files</code> 명령어를 통해 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> ls-files\n<span class=\"token comment\"># > test.txt</span></code></pre></div>\n<p>여기서 <code>test.txt</code>를 <code>TEST.txt</code>로 변경하고 싶다면 다음과 같은 시도를 할 수 있을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mv</span> test.txt TEST.txt\n<span class=\"token function\">ls</span>\n<span class=\"token comment\"># > TEST.txt</span></code></pre></div>\n<p>파일명이 성공적으로 바뀐 것처럼 보입니다. 하지만 파일 시스템에서 대소문자를 구분하지 않기 때문에 실제로 파일을 참조하는 데에는 영향이 없습니다. <code>rm test.txt</code> 명령어를 실행해보면 <code>TEST.txt</code> 파일이 삭제되는 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">rm</span> test.txt\n<span class=\"token function\">ls</span> <span class=\"token comment\"># TEST.txt가 삭제되어 어떤 파일도 확인할 수 없다</span>\n\n<span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD <span class=\"token comment\"># 최신 커밋 상태로 되돌려 test.txt 파일을 복구한다</span>\n<span class=\"token function\">mv</span> test.txt TEST.txt\n<span class=\"token function\">ls</span>\n<span class=\"token comment\"># > TEST.txt</span></code></pre></div>\n<p>마찬가지로 Git에서도 변경점을 인식하지 못하므로 <code>git commit</code>을 수행할 수 없습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> status\n<span class=\"token comment\"># > On branch main</span>\n<span class=\"token comment\"># > nothing to commit, working tree clean</span></code></pre></div>\n<p><code>core.ignorecase</code>가 <code>true</code>인 상태에서 파일명의 대소문자를 변경하려면 <code>git mv</code> 명령어를 사용할 수 있습니다. unstaged 상태에서는 이를 변경으로 취급하지 않기 때문에 자동으로 staging area에 올라가게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">mv</span> test.txt TEST.txt\n<span class=\"token function\">git</span> status\n<span class=\"token comment\"># > On branch main</span>\n<span class=\"token comment\"># > Changes to be committed:</span>\n<span class=\"token comment\"># >   (use \"git restore --staged &lt;file>...\" to unstage)</span>\n<span class=\"token comment\"># > \trenamed:    test.txt -> TEST.txt</span>\ng commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"change to TEST.txt\"</span></code></pre></div>\n<p>저장소의 인덱스에서도 올바르게 변경된 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> ls-files\n<span class=\"token comment\"># > TEST.txt</span></code></pre></div>\n<hr>\n<p>다른 방법으로는 <code>core.ignorecase</code> 설정값을 아예 바꿔버릴 수도 있으나, 이는 예기치 못한 문제를 일으킬 수 있기 때문에 권장되지 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config core.ignorecase <span class=\"token boolean\">false</span></code></pre></div>\n<br />\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://git-scm.com/docs/git-config#Documentation/git-config.txt-coreignoreCase\">Git - git-config Documentation</a></li>\n<li><a href=\"https://stackoverflow.com/questions/58192285/is-it-a-good-idea-to-set-git-config-core-ignorecase-to-false\">stack overflow - Is it a good idea to set git config core.ignorecase to false?</a></li>\n</ul>","frontmatter":{"title":"Git 대소문자 구분","date":"2023-11-12","tags":["TIL","Git"],"thumbnail":null},"timeToRead":1}},"pageContext":{"id":"9e5a42f7-f31f-58b4-96ad-07c30a1feb2d"}},"staticQueryHashes":["1147043159"],"slicesMap":{}}