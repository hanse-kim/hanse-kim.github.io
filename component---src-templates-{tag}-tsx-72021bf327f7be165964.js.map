{"version":3,"file":"component---src-templates-{tag}-tsx-72021bf327f7be165964.js","mappings":"2KAKO,MAAMA,EAAaC,IAA0B,MAANA,EAC5C,OACEC,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAACE,EAAAA,EAAS,CAACC,QAAM,GAAE,aACf,C,oECHH,MAAMC,EAAUL,IAAiC,IAAhC,SAAEM,GAAwBN,EAChD,OAAOC,EAAAA,cAAA,MAAIC,UAAU,iCAAiCI,EAAc,C,+ECC/D,MAAMC,EAAMP,IAAoC,IAAnC,MAAEQ,EAAK,SAAEC,GAAoBT,EAC/C,MAAMU,GAAeC,EAAAA,EAAAA,KAEfC,EAAY,GAAGJ,EAAQ,GAAGA,OAAa,KAAKE,EAAaF,QACzDK,EAAU,GAAGH,EAAaI,UAAUL,EAASM,UAAY,KAE/D,OACEd,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,QAAMe,KAAK,OACXf,EAAAA,cAAA,aAAQW,GACRX,EAAAA,cAAA,QAAMgB,SAAS,YAAYC,QAAQ,UACnCjB,EAAAA,cAAA,QAAMgB,SAAS,eAAeC,QAASR,EAAaF,QACpDP,EAAAA,cAAA,QAAMgB,SAAS,UAAUC,QAAQ,YACjCjB,EAAAA,cAAA,QAAMgB,SAAS,WAAWC,QAASN,IACnCX,EAAAA,cAAA,QAAMgB,SAAS,iBAAiBC,QAASR,EAAaS,cACtDlB,EAAAA,cAAA,QAAMgB,SAAS,SAASC,QAASL,IAChC,C,qECjBA,MAAMO,EAAkBpB,IAA8B,IAA7B,MAAEqB,GAAsBrB,EACtD,MAAM,EAACsB,EAAW,EAAEC,IAAkBC,EAAAA,EAAAA,UAAwB,OAEvCC,EAAAA,EAAAA,cAAY,KACjCF,EAAe,KAAK,GACnB,IAEH,OACEtB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ,0JAA0JqB,sEAcjK,C,sHCZA,MA2BMI,EAAQC,GACnB1B,EAAAA,cAACM,EAAAA,EAAGqB,OAAAC,OAAA,CAACrB,MAAO,OAAOmB,EAAMG,YAAYC,OAAWJ,IAmBlD,UAhBgB3B,IAGkD,IAHjD,YACf8B,EAAW,KACXE,GAC2DhC,EAC3D,MAAM,IAAE+B,GAAQD,GACV,MAAEG,GAAUD,EAAKE,kBAEvB,OACEjC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACF,EAAAA,EAAU,MACXE,EAAAA,cAACI,EAAAA,EAAO,KAAC,QAAM0B,GACf9B,EAAAA,cAACmB,EAAAA,EAAe,CAACC,MAAOY,EAAME,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAKC,CAAI,MACnD,C","sources":["webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/templates/{tag}.tsx"],"sourcesContent":["import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< 이전 페이지로'}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 mt-48 mb-24 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  const [hoveredPost, setHoveredPost] = useState<string | null>(null);\n\n  const handleBlurPost = useCallback(() => {\n    setHoveredPost(null);\n  }, []);\n\n  return (\n    <>\n      <style>{`#post-list a>div {opacity: 1; transform: translateY(0px) scale(1); transition: all 0.25s;} @media (min-width:1081px) {#post-list:hover a:not([data-id=\"${hoveredPost}\"])>div {opacity: 0.4; transform: translateY(12px) scale(0.98);}}`}</style>\n      {/* <section\n        id=\"post-list\"\n        className=\"grid grid-cols-3 p-24 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch\"\n      >\n        {posts.map((post) => (\n          <PostCard\n            key={post.fields.slug}\n            post={post}\n            onHover={setHoveredPost}\n            onBlur={handleBlurPost}\n          />\n        ))}\n      </section> */}\n    </>\n  );\n};\n","import { graphql, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { Seo } from 'src/components/common/seo';\nimport { PostListSection } from 'src/components/screen/blog-screen/post-list-section';\n\ntype PageContextType = {\n  tag: string;\n};\n\ntype DataType = {\n  allMarkdownRemark: {\n    edges: Array<{ node: MarkdownRemark }>;\n    totalCount: number;\n  };\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            hide\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps<DataType, PageContextType>) => (\n  <Seo title={`태그: ${props.pageContext.tag}`} {...props} />\n);\n\nconst TagPage = ({\n  pageContext,\n  data,\n}: PageProps<DataType, PageContextType, { referrer: string }>) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <BackButton />\n      <Heading>Tag: {tag}</Heading>\n      <PostListSection posts={edges.map(({ node }) => node)} />\n    </>\n  );\n};\n\nexport default TagPage;\n"],"names":["BackButton","_ref","React","className","NavButton","toBack","Heading","children","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","PostListSection","posts","hoveredPost","setHoveredPost","useState","useCallback","Head","props","Object","assign","pageContext","tag","data","edges","allMarkdownRemark","map","_ref2","node"],"sourceRoot":""}