{"version":3,"file":"component---src-templates-{post}-tsx-content-file-path-null-910d9c2c87c73e41805a.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./src/components/common/back-button.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/markdown.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/post-header.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/giscus-commnet.tsx","webpack://hanse-kim.dev/./src/components/screen/post-screen/index.tsx","webpack://hanse-kim.dev/./src/templates/{post}.tsx"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","import React from 'react';\nimport { NavButton } from '../layout/header/nav-button';\n\ntype BackButtonProps = {};\n\nexport const BackButton = ({}: BackButtonProps) => {\n  return (\n    <div className=\"ml-24 -mb-24 mt-36 w-fit\">\n      <NavButton toBack>{'< 이전 페이지로'}</NavButton>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 mt-48 mb-24 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { motion } from 'framer-motion';\nimport React, { MouseEventHandler } from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\nimport { RouterUtils } from 'src/_libs/utils/router.utils';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    RouterUtils.push(routes.tag(tag), { state: linkStates.toLower });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.15 }}\n      transition={{\n        type: 'spring',\n        damping: 20,\n        stiffness: 1500,\n      }}\n    >\n      <button\n        className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n        onClick={handleClick}\n      >\n        {tag}\n      </button>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport 'src/styles/markdown-styles.css';\nimport 'src/styles/prism-theme.css';\n\ntype MarkdownProps = {\n  html: string;\n};\n\nexport const Markdown = ({ html }: MarkdownProps) => {\n  return (\n    <div\n      className=\"flex flex-col gap-24 px-24 pb-48 md text-20-400\"\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { BackButton } from 'src/components/common/back-button';\nimport { Heading } from 'src/components/common/heading';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostHeaderProps = MarkdownRemark['frontmatter'] & {\n  timeToRead: number;\n};\n\nexport const PostHeader = ({\n  title,\n  date,\n  tags,\n  timeToRead,\n}: PostHeaderProps) => {\n  return (\n    <header>\n      <BackButton />\n      <Heading>{title}</Heading>\n      <div className=\"pl-24 -mt-24 mb-36\">\n        <div className=\"text-18-400 text-text-footer\">{`${date} · ${timeToRead} min read`}</div>\n        <div className=\"flex gap-12 mt-12\">\n          {tags.map((tag) => (\n            <TagButton key={tag} tag={tag} />\n          ))}\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDarkModeStore } from 'src/stores/dark-mode.store';\n\ntype GiscusCommentProps = {};\n\nexport const GiscusComment = ({}: GiscusCommentProps) => {\n  const giscusRef = useRef<HTMLDivElement>(null);\n  const isDarkMode = useDarkModeStore((state) => state.isDarkMode);\n\n  useEffect(() => {\n    const giscusConfig = {\n      repo: 'hanse-kim/hanse-kim.github.io',\n      repoId: 'R_kgDOMrV8_w',\n      category: 'Announcements',\n      categoryId: 'DIC_kwDOMrV8_84CiQDw',\n      mapping: 'url',\n      strict: '0',\n      reactionsEnabled: '0',\n      emitMetadata: '0',\n      inputPosition: 'bottom',\n      theme: isDarkMode ? 'dark' : 'light',\n      lang: 'ko',\n    };\n\n    const giscusScript = document.createElement('script');\n    giscusScript.src = 'https://giscus.app/client.js';\n    giscusScript.crossOrigin = 'anonymous';\n    giscusScript.async = true;\n    Object.entries(giscusConfig).map(\n      ([key, value]) => (giscusScript.dataset[key] = value)\n    );\n\n    document.head.appendChild(giscusScript);\n\n    return () => {\n      giscusScript.remove();\n    };\n  }, []);\n\n  return (\n    <div className=\"px-24\">\n      <div className=\"giscus\" ref={giscusRef} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { Markdown } from './markdown';\nimport { PostHeader } from './post-header';\nimport { GiscusComment } from './giscus-commnet';\n\ntype PostScreenProps = {\n  post: MarkdownRemark;\n};\n\nexport const PostScreen = ({ post }: PostScreenProps) => {\n  return (\n    <article>\n      <PostHeader {...post.frontmatter} timeToRead={post.timeToRead} />\n      {post.frontmatter.thumbnail && (\n        <CustomImage\n          className=\"border border-solid mb-36 - 1 border-border\"\n          src={post.frontmatter.thumbnail?.publicURL}\n          alt={post.frontmatter.title}\n          ratio={9 / 21}\n        />\n      )}\n      <Markdown html={post.html} />\n      <GiscusComment />\n    </article>\n  );\n};\n","import { graphql, HeadFC, type PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Seo } from 'src/components/common/seo';\nimport { PostScreen } from 'src/components/screen/post-screen';\n\ninterface DataType {\n  markdownRemark: MarkdownRemark;\n}\n\nexport const pageQuery = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport const Head: HeadFC<DataType> = (pageProps) => (\n  <Seo title={pageProps.data.markdownRemark.frontmatter.title} {...pageProps} />\n);\n\nconst PostTemplate = ({\n  data,\n}: PageProps<DataType, object, { referrer: string }>) => {\n  return <PostScreen post={data.markdownRemark} />;\n};\n\nexport default PostTemplate;\n"],"names":["linkStates","toLower","BackButton","_ref","React","className","NavButton","toBack","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","Heading","children","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","TagButton","tag","motion","div","whileHover","scale","transition","type","damping","stiffness","onClick","preventDefault","stopPropagation","RouterUtils","push","routes","state","Markdown","html","dangerouslySetInnerHTML","__html","PostHeader","date","tags","timeToRead","map","key","GiscusComment","giscusRef","useRef","isDarkMode","useDarkModeStore","useEffect","giscusConfig","repo","repoId","category","categoryId","mapping","strict","reactionsEnabled","emitMetadata","inputPosition","theme","giscusScript","document","createElement","crossOrigin","async","entries","_ref2","value","head","appendChild","remove","ref","PostScreen","_post$frontmatter$thu","post","frontmatter","thumbnail","publicURL","alt","Head","pageProps","data","markdownRemark"],"sourceRoot":""}