{"version":3,"file":"component---src-pages-404-tsx-43ce574d8a54a52c6168.js","mappings":"0KAcA,MCNaA,EAAMC,IAAoC,IAAnC,MAAEC,EAAK,SAAEC,GAAoBF,EAC/C,MAAMG,EDqBuBC,MAC7B,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAjBR,cAmBT,OAAOD,EAAKF,YAAY,ECxBHC,GAEfG,EAAY,GAAGN,EAAQ,GAAGA,OAAa,KAAKE,EAAaF,QACzDO,EAAU,GAAGL,EAAaM,UAAUP,EAASQ,UAAY,KAE/D,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,QAAMC,KAAK,OACXD,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAME,SAAS,YAAYC,QAAQ,UACnCH,EAAAA,cAAA,QAAME,SAAS,eAAeC,QAASX,EAAaF,QACpDU,EAAAA,cAAA,QAAME,SAAS,UAAUC,QAAQ,YACjCH,EAAAA,cAAA,QAAME,SAAS,WAAWC,QAASP,IACnCI,EAAAA,cAAA,QAAME,SAAS,iBAAiBC,QAASX,EAAaY,cACtDJ,EAAAA,cAAA,QAAME,SAAS,SAASC,QAASN,IAChC,C,qHCrBA,MAAMQ,EAAiBhB,IAA8B,MAANA,EACpD,OACEW,EAAAA,cAAA,WAASM,UAAU,iGACjBN,EAAAA,cAAA,MAAIM,UAAU,eAAc,OAC5BN,EAAAA,cAAA,OAAKM,UAAU,eAAc,mBACrB,ECJDC,EAAgBC,GAAcR,EAAAA,cAACZ,EAAAA,EAAQoB,GAMpD,MAJ0CnB,IAAQ,MAALA,EAC3C,OAAOW,EAAAA,cAACK,EAAc,KAAG,C","sources":["webpack://hanse-kim.dev/./src/hooks/use-site-metadata.ts","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/screen/404-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/404.tsx"],"sourcesContent":["import { graphql, Node, useStaticQuery } from 'gatsby';\n\ntype SiteNode = Node & {\n  siteMetadata: {\n    title: string;\n    description: string;\n    email: string;\n    githubUrl: string;\n    githubName: string;\n    publishYear: string;\n    siteUrl: string;\n  };\n};\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        githubUrl\n        githubName\n        email\n        publishYear\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery<{ site: SiteNode }>(query);\n\n  return site.siteMetadata;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\n\ntype NotFoundScreenProps = {};\n\nexport const NotFoundScreen = ({}: NotFoundScreenProps) => {\n  return (\n    <section className=\"flex flex-col items-center w-full absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\">\n      <h1 className=\"text-96-700\">404</h1>\n      <div className=\"text-24-400\">페이지를 찾을 수 없습니다.</div>\n    </section>\n  );\n};\n","import { HeadFC, PageProps } from 'gatsby';\nimport * as React from 'react';\nimport { Seo } from 'src/components/common/seo';\nimport { NotFoundScreen } from 'src/components/screen/404-screen';\n\nexport const Head: HeadFC = (pageProps) => <Seo {...pageProps} />;\n\nconst NotFoundPage: React.FC<PageProps> = ({}) => {\n  return <NotFoundScreen />;\n};\n\nexport default NotFoundPage;\n"],"names":["Seo","_ref","title","location","siteMetadata","useSiteMetadata","site","useStaticQuery","pageTitle","pageUrl","siteUrl","pathname","React","lang","property","content","description","NotFoundScreen","className","Head","pageProps"],"sourceRoot":""}