{"version":3,"file":"component---src-pages-blog-tsx-e3606636a931ba8c510a.js","mappings":"2KAQO,MAAMA,EAAMC,IAAoC,IAAnC,MAAEC,EAAK,SAAEC,GAAoBF,EAC/C,MAAMG,GAAeC,EAAAA,EAAAA,KAEfC,EAAY,GAAGJ,EAAQ,GAAGA,OAAa,KAAKE,EAAaF,QACzDK,EAAU,GAAGH,EAAaI,UAAUL,EAASM,UAAY,KAE/D,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAMC,SAAS,YAAYC,QAAQ,UACnCF,EAAAA,cAAA,QAAMC,SAAS,eAAeC,QAASR,EAAaF,QACpDQ,EAAAA,cAAA,QAAMC,SAAS,UAAUC,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,SAAS,WAAWC,QAASN,IACnCI,EAAAA,cAAA,QAAMC,SAAS,iBAAiBC,QAASR,EAAaS,cACtDH,EAAAA,cAAA,QAAMC,SAAS,SAASC,QAASL,IAChC,C,yFCpBP,MAAMO,GAAaC,EAAAA,EAAAA,OAAK,IAAM,gCAmCjBC,EAAgBC,GAAcP,EAAAA,cAACV,EAAAA,EAAGkB,OAAAC,OAAA,CAACjB,MAAM,QAAWe,IAgBjE,UAdiBhB,IAAmC,IAAlC,KAAEmB,GAA2BnB,EAC7C,OACES,EAAAA,cAACW,EAAAA,SAAQ,CACPC,SACEZ,EAAAA,cAAA,OAAKa,UAAU,kDAAiD,eAKlEb,EAAAA,cAACI,EAAU,CAACU,MAAOJ,EAAKK,kBAAkBC,QACjC,C","sources":["webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/pages/blog.tsx"],"sourcesContent":["import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import { graphql, HeadFC, PageProps } from 'gatsby';\nimport React, { lazy, Suspense } from 'react';\nimport { PostMarkdown } from 'src/_libs/types/post-markdown';\nimport { Seo } from '../components/common/seo';\nconst BlogScreen = lazy(() => import('../components/screens/blog-screen'));\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { sourceInstanceName: { eq: \"posts\" } } }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          tags\n          hide\n          thumbnail {\n            publicURL\n          }\n        }\n        timeToRead\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\ntype DataType = {\n  allMarkdownRemark: {\n    nodes: PostMarkdown[];\n  };\n};\n\nexport const Head: HeadFC = (pageProps) => <Seo title=\"Blog\" {...pageProps} />;\n\nconst BlogPage = ({ data }: PageProps<DataType>) => {\n  return (\n    <Suspense\n      fallback={\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          Loading...\n        </div>\n      }\n    >\n      <BlogScreen posts={data.allMarkdownRemark.nodes} />\n    </Suspense>\n  );\n};\n\nexport default BlogPage;\n"],"names":["Seo","_ref","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","React","property","content","description","BlogScreen","lazy","Head","pageProps","Object","assign","data","Suspense","fallback","className","posts","allMarkdownRemark","nodes"],"sourceRoot":""}