{"version":3,"file":"794-5ead592d65ffaf919531.js","mappings":"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","sources":["webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://hanse-kim.dev/./node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","webpack://hanse-kim.dev/./src/components/layout/motion-layout.tsx"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.31\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.31\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.31 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { LazyMotion, domAnimation } from 'framer-motion';\nimport React from 'react';\nimport { usePage } from 'src/contexts/page-context';\nimport { Footer } from './footer';\nimport { Header } from './header';\nimport { Main } from './main';\nimport { PageTransition } from './page-transition';\n\ntype MotionLayoutProps = { children: React.ReactNode };\n\nexport const MotionLayout = ({ children }: MotionLayoutProps) => {\n  const { pageProps } = usePage();\n\n  return (\n    <LazyMotion features={domAnimation}>\n      <Header />\n      <Main>\n        <PageTransition location={pageProps.location}>\n          {children}\n        </PageTransition>\n      </Main>\n      <Footer />\n    </LazyMotion>\n  );\n};\n"],"names":["LazyMotion","children","features","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","undefined","renderer","loadedFeatures","current","useEffect","then","jsx","LazyContext","Provider","value","shallowCompare","next","prev","Array","isArray","prevLength","length","i","resolveVariant","visualElement","definition","custom","props","getProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","transform","has","startsWith","Math","sqrt","getValueTransition","transition","key","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","isZeroValueString","v","test","isNumericalString","splitCSSVariableRegex","getVariableValue","element","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","positionalKeys","Set","isNumOrPxType","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","x","paddingLeft","paddingRight","max","min","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","Map","forEach","removedTransforms","getValue","push","get","set","removeNonTranslationalTransform","render","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","add","read","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","cancel","resume","isColorString","testProp","Boolean","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","alpha","rgbUnit","round","clamp","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","number","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","unit","defaultValue","functionRegex","functions","join","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","callback","result","now","clearTime","time","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","velocity","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","reduce","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","start","stop","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","arguments","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","applyWillChange","willChange","style","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","isActive","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","pointType","point","addPointerInfo","pointerType","button","isPrimary","isPrimaryPointer","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","isDragActive","openGestureLock","drag","openHorizontal","openVertical","getGlobalLock","addHoverEvent","callbackName","info","postRender","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","createBox","propEventHandlers","numVariantProps","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","vars","HTMLVisualElement","defaultType","default","computedStyle","childSubscription","textContent","SVGVisualElement","isSVGTag","getAttribute","styleProp","tagName","domAnimation","Component","allowProjection","Fragment","MotionLayout","_ref","pageProps","usePage","React","Header","Main","PageTransition","location","Footer"],"sourceRoot":""}