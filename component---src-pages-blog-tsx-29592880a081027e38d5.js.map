{"version":3,"file":"component---src-pages-blog-tsx-29592880a081027e38d5.js","mappings":"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","sources":["webpack://hanse-kim.dev/./src/_libs/constants/link-states.ts","webpack://hanse-kim.dev/./src/components/common/heading.tsx","webpack://hanse-kim.dev/./src/components/common/seo.tsx","webpack://hanse-kim.dev/./src/components/common/custom-image.tsx","webpack://hanse-kim.dev/./src/components/common/tag-button.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/post-card.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/post-list-section/index.tsx","webpack://hanse-kim.dev/./src/components/screen/blog-screen/index.tsx","webpack://hanse-kim.dev/./src/pages/blog.tsx"],"sourcesContent":["export const linkStates = {\n  toLower: {\n    toLower: true,\n  },\n};\n","import React from 'react';\n\ntype HeadingProps = {\n  children?: React.ReactNode;\n};\n\nexport const Heading = ({ children }: HeadingProps) => {\n  return <h1 className=\"px-24 my-48 text-36-700\">{children}</h1>;\n};\n","import { HeadProps } from 'gatsby';\nimport React from 'react';\nimport { useSiteMetadata } from 'src/hooks/use-site-metadata';\n\ntype SeoProps = HeadProps & {\n  title?: string;\n};\n\nexport const Seo = ({ title, location }: SeoProps) => {\n  const siteMetadata = useSiteMetadata();\n\n  const pageTitle = `${title ? `${title} | ` : ''}${siteMetadata.title}`;\n  const pageUrl = `${siteMetadata.siteUrl}${location.pathname || ''}`;\n\n  return (\n    <>\n      {/* SEO */}\n      <html lang=\"ko\" />\n      <title>{pageTitle}</title>\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:site_name\" content={siteMetadata.title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={siteMetadata.description} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </>\n  );\n};\n","import React from 'react';\n\ntype CustomImageProps = {\n  className?: string;\n  src?: string;\n  alt?: string;\n  /** height / width */\n  ratio?: number;\n};\n\nexport const CustomImage = ({\n  className = '',\n  ratio,\n  src,\n  ...props\n}: CustomImageProps) => {\n  return (\n    <div\n      className={`relative w-full h-full flex overflow-hidden ${className}`}\n      style={{ paddingBottom: !!ratio ? `${ratio * 100}%` : undefined }}\n    >\n      {!!src && (\n        <img\n          className={`peer ${\n            !!ratio ? 'absolute inset-0 h-full w-full' : 'w-full'\n          } object-cover opacity-100 transition-opacity data-[loaded=false]:absolute data-[loaded=false]:pointer-events-none data-[loaded=false]:opacity-0`}\n          src={src}\n          {...props}\n          onLoad={(e) => {\n            e.currentTarget.dataset.loaded = 'true';\n          }}\n          onError={(e) => {\n            e.currentTarget.dataset.error = 'true';\n          }}\n        />\n      )}\n      <div\n        className={`flex flex-shrink-0 absolute inset-0 bg-bg-footer animate-pulse peer-data-[loaded=true]:hidden`}\n      />\n    </div>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { routes } from 'src/_libs/constants/routes';\n\ntype TagButtonProps = {\n  tag: string;\n};\n\nexport const TagButton = ({ tag }: TagButtonProps) => {\n  return (\n    <Link\n      to={routes.tag(tag)}\n      className=\"px-8 pt-3 pb-4 transition-colors rounded-4 bg-border text-main text-14-400 desktop:hover:text-bg desktop:hover:bg-main\"\n      onClick={(e) => e.stopPropagation()}\n      state={linkStates.toLower}\n    >\n      {tag}\n    </Link>\n  );\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { linkStates } from 'src/_libs/constants/link-states';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { CustomImage } from 'src/components/common/custom-image';\nimport { TagButton } from 'src/components/common/tag-button';\n\ntype PostCardProps = {\n  post: MarkdownRemark;\n  onHover: (postId: string) => void;\n  onBlur: (postId: string) => void;\n};\n\nexport const PostCard = React.memo(\n  ({ post, onHover, onBlur }: PostCardProps) => {\n    return (\n      <Link\n        to={post.fields.slug || ''}\n        onMouseEnter={() => onHover(post.fields.slug)}\n        onMouseLeave={() => onBlur(post.fields.slug)}\n        data-id={post.fields.slug}\n        state={linkStates.toLower}\n      >\n        <div\n          className={`px-20 py-32 overflow-hidden transition-all group rounded-16 bg-bg outline outline-transparent outline-1 desktop:hover:outline-blur desktop:hover:drop-shadow-post tablet:outline-border`}\n        >\n          {post.frontmatter.thumbnail?.publicURL && (\n            <CustomImage\n              src={post.frontmatter.thumbnail?.publicURL}\n              alt={post.frontmatter.title}\n              className=\"border-solid rounded-8 border-1 border-border mb-18\"\n            />\n          )}\n          <h2 className=\"break-all text-32-700 line-clamp-2\">\n            {post.frontmatter.title}\n          </h2>\n          <div className=\"flex gap-12 mt-12\">\n            {post.frontmatter.tags.map((tag) => (\n              <TagButton key={tag} tag={tag} />\n            ))}\n          </div>\n          <p className=\"w-full mt-16 text-text-footer text-18-300 line-clamp-2\">\n            {post.excerpt}\n          </p>\n        </div>\n      </Link>\n    );\n  }\n);\n","import React, { useCallback, useState } from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { PostCard } from './post-card';\n\ntype PostListProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const PostListSection = ({ posts }: PostListProps) => {\n  const [hoveredPost, setHoveredPost] = useState<string | null>(null);\n\n  const handleBlurPost = useCallback(() => {\n    setHoveredPost(null);\n  }, []);\n\n  return (\n    <>\n      <style>{`#post-list a>div {opacity: 1; transform: translateY(0px) scale(1); transition: opacity 0.4s, transform 0.4s;} @media (min-width:1081px) {#post-list:hover a:not([data-id=\"${hoveredPost}\"])>div {opacity: 0.4; transform: translateY(12px) scale(0.98);}}`}</style>\n      <section\n        id=\"post-list\"\n        className=\"grid grid-cols-3 p-24 gap-x-20 gap-y-32 tablet:grid-cols-2 mobile:flex mobile:flex-col mobile:items-stretch\"\n      >\n        {posts.map((post) => (\n          <PostCard\n            key={post.fields.slug}\n            post={post}\n            onHover={setHoveredPost}\n            onBlur={handleBlurPost}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Heading } from 'src/components/common/heading';\nimport { Layout } from 'src/components/layout';\nimport { PostListSection } from './post-list-section';\n\ntype BlogScreenProps = {\n  posts: MarkdownRemark[];\n};\n\nexport const BlogScreen = ({ posts }: BlogScreenProps) => {\n  return (\n    <>\n      <Heading>{`Blog (${posts.length} posts)`}</Heading>\n      <PostListSection posts={posts} />\n    </>\n  );\n};\n","import { graphql, HeadFC, PageProps } from 'gatsby';\nimport React from 'react';\nimport { MarkdownRemark } from 'src/_libs/types/markdown-remark';\nimport { Seo } from '../components/common/seo';\nimport { BlogScreen } from '../components/screen/blog-screen';\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          tags\n          hide\n          thumbnail {\n            publicURL\n          }\n        }\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\ntype DataType = {\n  allMarkdownRemark: {\n    nodes: MarkdownRemark[];\n  };\n};\n\nexport const Head: HeadFC = (pageProps) => <Seo {...pageProps} />;\n\nconst BlogPage = ({ data }: PageProps<DataType>) => {\n  return <BlogScreen posts={data.allMarkdownRemark.nodes} />;\n};\n\nexport default BlogPage;\n"],"names":["linkStates","toLower","Heading","_ref","children","React","className","Seo","title","location","siteMetadata","useSiteMetadata","pageTitle","pageUrl","siteUrl","pathname","lang","property","content","description","CustomImage","ratio","src","props","style","paddingBottom","undefined","Object","assign","onLoad","e","currentTarget","dataset","loaded","onError","error","TagButton","tag","Link","to","routes","onClick","stopPropagation","state","PostCard","_post$frontmatter$thu","_post$frontmatter$thu2","post","onHover","onBlur","fields","slug","onMouseEnter","onMouseLeave","frontmatter","thumbnail","publicURL","alt","tags","map","key","excerpt","PostListSection","posts","hoveredPost","setHoveredPost","useState","handleBlurPost","useCallback","id","BlogScreen","length","Head","pageProps","data","allMarkdownRemark","nodes"],"sourceRoot":""}